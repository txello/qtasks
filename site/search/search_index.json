{"config":{"lang":["ru"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"QueueTasks \u2014 \u0424\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a \u0434\u043b\u044f \u043e\u0447\u0435\u0440\u0435\u0434\u0435\u0439 \u0437\u0430\u0434\u0430\u0447","text":"<p>QueueTasks \u2014 \u044d\u0442\u043e \u0441\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0439 \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a \u0434\u043b\u044f \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u043e\u0439 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0437\u0430\u0434\u0430\u0447, \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u043d\u044b\u0439 \u0441 \u0443\u043f\u043e\u0440\u043e\u043c \u043d\u0430 \u043f\u0440\u043e\u0441\u0442\u043e\u0442\u0443, \u0433\u0438\u0431\u043a\u043e\u0441\u0442\u044c \u0438 \u0440\u0430\u0441\u0448\u0438\u0440\u044f\u0435\u043c\u043e\u0441\u0442\u044c. \u041e\u043d \u043b\u0435\u0433\u043a\u043e \u0438\u043d\u0442\u0435\u0433\u0440\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u0432 \u043f\u0440\u043e\u0435\u043a\u0442\u044b \u043b\u044e\u0431\u043e\u0433\u043e \u043c\u0430\u0441\u0448\u0442\u0430\u0431\u0430 \u0438 \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442 \u043a\u0430\u043a \u043d\u043e\u0432\u0438\u0447\u043a\u0430\u043c, \u0442\u0430\u043a \u0438 \u043e\u043f\u044b\u0442\u043d\u044b\u043c \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0430\u043c.</p>"},{"location":"#_1","title":"\u041e\u0441\u043e\u0431\u0435\u043d\u043d\u043e\u0441\u0442\u0438","text":"<ul> <li>\u041f\u0440\u043e\u0441\u0442\u043e\u0439 \u2014 \u041b\u0435\u0433\u043a\u043e \u043d\u0430\u0441\u0442\u0440\u0430\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0438 \u0431\u044b\u0441\u0442\u0440\u043e \u043e\u0441\u0432\u0430\u0438\u0432\u0430\u0435\u0442\u0441\u044f. \u0418\u043d\u0442\u0443\u0438\u0442\u0438\u0432\u043d\u044b\u0439 API \u0438 \u043f\u043e\u043d\u044f\u0442\u043d\u0430\u044f \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 \u043f\u0440\u043e\u0435\u043a\u0442\u0430.</li> <li>\u041d\u0430\u0441\u0442\u0440\u0430\u0438\u0432\u0430\u0435\u043c\u044b\u0439 \u2014 \u041a\u0430\u0436\u0434\u044b\u0439 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442 \u043c\u043e\u0436\u043d\u043e \u0437\u0430\u043c\u0435\u043d\u0438\u0442\u044c \u0438\u043b\u0438 \u0430\u0434\u0430\u043f\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043f\u043e\u0434 \u0441\u0432\u043e\u0438 \u043d\u0443\u0436\u0434\u044b. \u0412\u044b \u0443\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442\u0435 \u043b\u043e\u0433\u0438\u043a\u043e\u0439 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f.</li> <li>\u0420\u0430\u0441\u0448\u0438\u0440\u044f\u0435\u043c\u044b\u0439 \u2014 \u041f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430 \u043f\u043b\u0430\u0433\u0438\u043d\u043e\u0432 \u0438 \u043c\u043e\u0434\u0443\u043b\u0435\u0439 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043b\u0435\u0433\u043a\u043e \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0442\u044c \u043d\u043e\u0432\u044b\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u0438 \u0438 \u0438\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u0438.</li> </ul>"},{"location":"ru/blog/","title":"\u0411\u043b\u043e\u0433","text":""},{"location":"ru/blog/#_1","title":"\u0412 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0435...","text":""},{"location":"ru/components/","title":"\u041a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u044b QueueTasks","text":"<p>\u0424\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a QueueTasks \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d \u043f\u043e \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u043d\u043e\u0439 \u0430\u0440\u0445\u0438\u0442\u0435\u043a\u0442\u0443\u0440\u0435 \u2014 \u043a\u0430\u0436\u0434\u044b\u0439 \u043c\u043e\u0434\u0443\u043b\u044c \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0437\u0430 \u0441\u0432\u043e\u044e \u0447\u0430\u0441\u0442\u044c \u0440\u0430\u0431\u043e\u0442\u044b \u0438 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0437\u0430\u043c\u0435\u043d\u0451\u043d \u0438\u043b\u0438 \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d.</p>"},{"location":"ru/components/#_1","title":"\u041e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u044b","text":""},{"location":"ru/components/#queuetasks_1","title":"QueueTasks","text":"<p>\u0426\u0435\u043d\u0442\u0440\u0430\u043b\u044c\u043d\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a\u0430. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u0437\u0430\u0434\u0430\u0447, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0441 \u0434\u0440\u0443\u0433\u0438\u043c\u0438 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0430\u043c\u0438.</p>"},{"location":"ru/components/#worker","title":"Worker (\u0412\u043e\u0440\u043a\u0435\u0440)","text":"<p>\u0412\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u0437\u0430\u0434\u0430\u0447\u0438, \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0435 \u0438\u0437 \u043e\u0447\u0435\u0440\u0435\u0434\u0438. \u041f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442 \u043f\u0430\u0440\u0430\u043b\u043b\u0435\u043b\u044c\u043d\u0443\u044e \u0438 \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u0443\u044e \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0443.</p>"},{"location":"ru/components/#broker","title":"Broker (\u0411\u0440\u043e\u043a\u0435\u0440)","text":"<p>\u041e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0437\u0430 \u043f\u0440\u0438\u0451\u043c \u0438 \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u0438\u0437\u0430\u0446\u0438\u044e \u0437\u0430\u0434\u0430\u0447. \u041f\u0435\u0440\u0435\u0434\u0430\u0451\u0442 \u0437\u0430\u0434\u0430\u0447\u0438 \u0432\u043e\u0440\u043a\u0435\u0440\u0443.</p>"},{"location":"ru/components/#storage","title":"Storage (\u0425\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435)","text":"<p>\u0421\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u043e \u0437\u0430\u0434\u0430\u0447\u0430\u0445 (\u0441\u0442\u0430\u0442\u0443\u0441, \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442, \u0432\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0438 \u0434\u0440.). \u042f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0447\u0430\u0441\u0442\u044c\u044e \u0431\u0440\u043e\u043a\u0435\u0440\u0430, \u043d\u043e \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d.</p>"},{"location":"ru/components/#starter","title":"Starter (\u0421\u0442\u0430\u0440\u0442\u0435\u0440)","text":"<p>\u041e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0437\u0430 \u0437\u0430\u043f\u0443\u0441\u043a \u0432\u0441\u0435\u0445 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u043e\u0432 \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a\u0430. \u041f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0446\u0435\u043d\u0442\u0440\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u043e \u0443\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c \u0436\u0438\u0437\u043d\u0435\u043d\u043d\u044b\u043c \u0446\u0438\u043a\u043b\u043e\u043c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f.</p>"},{"location":"ru/components/#_2","title":"\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u044b","text":""},{"location":"ru/components/#globalconfig","title":"GlobalConfig (\u0413\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u0430\u044f \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044f)","text":"<p>\u0425\u0440\u0430\u043d\u0438\u0442 \u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b, \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0435 \u0432\u0441\u0435\u043c \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0430\u043c. \u041e\u0431\u044b\u0447\u043d\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u0443\u0435\u0442\u0441\u044f \u0432\u043d\u0443\u0442\u0440\u0438 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0430.</p>"},{"location":"ru/components/#plugins","title":"Plugins (\u041f\u043b\u0430\u0433\u0438\u043d\u044b)","text":"<p>\u0420\u0430\u0441\u0448\u0438\u0440\u044f\u044e\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a\u0430. \u041c\u043e\u0433\u0443\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0442\u044c\u0441\u044f \u043a \u043b\u044e\u0431\u043e\u043c\u0443 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0443, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440: \u043b\u043e\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, \u043a\u0430\u0441\u0442\u043e\u043c\u043d\u044b\u0435 \u0442\u0440\u0438\u0433\u0433\u0435\u0440\u044b \u0438 \u0442.\u043f.</p>"},{"location":"ru/components/#timer","title":"Timer (\u0422\u0430\u0439\u043c\u0435\u0440)","text":"<p>\u041f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u044c \u0437\u0430\u0434\u0430\u0447\u0438 \u043f\u043e \u0440\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u044e (\u0430\u043d\u0430\u043b\u043e\u0433 cron).</p>"},{"location":"ru/components/#webview","title":"WebView","text":"<p>\u041e\u0442\u0434\u0435\u043b\u044c\u043d\u0430\u044f \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430, \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0449\u0430\u044f \u0432\u0438\u0437\u0443\u0430\u043b\u044c\u043d\u044b\u0439 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u0434\u043b\u044f \u043c\u043e\u043d\u0438\u0442\u043e\u0440\u0438\u043d\u0433\u0430 \u0437\u0430\u0434\u0430\u0447.</p> <p>\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430: <pre><code>pip install qtasks_webview\n</code></pre></p>"},{"location":"ru/components/#_3","title":"\u041f\u0440\u0438\u043c\u0435\u0440 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0432\u0441\u0435\u0445 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u043e\u0432 \u0432\u0440\u0443\u0447\u043d\u0443\u044e","text":"<pre><code>import asyncio\nfrom qtasks.asyncio import QueueTasks\nfrom qtasks.configs import AsyncRedisGlobalConfig\nfrom qtasks.storages import AsyncRedisStorage\nfrom qtasks.brokers import AsyncRedisBroker\nfrom qtasks.workers import AsyncWorker\nfrom qtasks.starters import AsyncStarter\n\n# GlobalConfig \u2014 \u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u0438 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438\nglobal_config = AsyncRedisGlobalConfig(\n    name=\"QueueTasks\",\n    url=\"redis://localhost:6379/2\"\n)\n\n# Storage \u2014 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435 \u0437\u0430\u0434\u0430\u0447\nstorage = AsyncRedisStorage(\n    name=\"QueueTasks\",\n    global_config=global_config,\n    url=\"redis://localhost:6379/2\"\n)\n\n# Broker \u2014 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0432\u0445\u043e\u0434\u044f\u0449\u0438\u0445 \u0437\u0430\u0434\u0430\u0447\nbroker = AsyncRedisBroker(\n    name=\"QueueTasks\",\n    storage=storage,\n    url=\"redis://localhost:6379/2\"\n)\n\n# Worker \u2014 \u0438\u0441\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c \u0437\u0430\u0434\u0430\u0447\nworker = AsyncWorker(\n    name=\"QueueTasks\",\n    broker=broker\n)\n\n# QueueTasks \u2014 \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u043e\u0431\u044a\u0435\u043a\u0442\napp = QueueTasks(\n    name=\"QueueTasks\",\n    broker=broker,\n    worker=worker\n)\n\n# \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f\napp.config.max_tasks_process = 10\napp.config.running_older_tasks = True\napp.config.delete_finished_tasks = True\n\n# \u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u0430\u0434\u0430\u0447\u0438\n@app.task(name=\"test\")\nasync def sample_task(id: int):\n    result = f\"\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c {id} \u0437\u0430\u043f\u0438\u0441\u0430\u043d\"\n    await asyncio.sleep(id)\n    return result\n\n# \u0417\u0430\u043f\u0443\u0441\u043a \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e Starter\nif __name__ == \"__main__\":\n    starter = AsyncStarter(\n        name=\"QueueTasks\",\n        worker=worker,\n        broker=broker\n    )\n    app.run_forever(starter=starter)\n</code></pre>"},{"location":"ru/examples/","title":"\u041f\u0440\u0438\u043c\u0435\u0440\u044b","text":"<p>\u041d\u0430 \u044d\u0442\u043e\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u043f\u0440\u0438\u0432\u0435\u0434\u0435\u043d\u044b \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0435 \u043f\u0440\u0438\u043c\u0435\u0440\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f QueueTasks. \u042d\u0442\u0438 \u043f\u0440\u0438\u043c\u0435\u0440\u044b \u043f\u043e\u043c\u043e\u0433\u0443\u0442 \u0432\u0430\u043c \u0431\u044b\u0441\u0442\u0440\u0435\u0435 \u043e\u0441\u0432\u043e\u0438\u0442\u044c \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u0438 \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a\u0430 \u0438 \u043d\u0430\u0447\u0430\u0442\u044c \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0441 \u0437\u0430\u0434\u0430\u0447\u0430\u043c\u0438.</p>"},{"location":"ru/examples/#_2","title":"\u041f\u0440\u043e\u0441\u0442\u043e\u0439 \u043f\u0440\u0438\u043c\u0435\u0440 \u0437\u0430\u0434\u0430\u0447\u0438","text":"<p>\u0417\u0430\u0434\u0430\u0447\u0430, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443, \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u0435\u0451 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043e\u0431\u0440\u0430\u0442\u043d\u043e. <pre><code>from qtasks import QueueTasks\n\napp = QueueTasks()\n\n@app.task(name=\"print_text\")\ndef print_text(text: str):\n    print(text)\n    return text\n\napp.run_forever()\n\n# \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438 \u0432 \u043e\u0447\u0435\u0440\u0435\u0434\u044c\napp.add_task(\"print_text\", args=(\"\u041f\u0440\u0438\u0432\u0435\u0442, \u043c\u0438\u0440!\",))\n</code></pre></p>"},{"location":"ru/examples/#_3","title":"\u0410\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u0430\u044f \u0437\u0430\u0434\u0430\u0447\u0430","text":"<p>\u041f\u0440\u0438\u043c\u0435\u0440 \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u043e\u0439 \u0437\u0430\u0434\u0430\u0447\u0438, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043e\u0436\u0438\u0434\u0430\u0435\u0442 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u043e\u0433\u043e \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0438\u043c\u0438\u0442\u0430\u0446\u0438\u044f \u0437\u0430\u0434\u0435\u0440\u0436\u043a\u0438).</p> <pre><code>from qtasks.asyncio import QueueTasks\nimport asyncio\n\napp = QueueTasks()\n\n@app.task(name=\"async_task\")\nasync def async_task(text: str):\n    await asyncio.sleep(2)\n    print(f\"\u0417\u0430\u0434\u0430\u0447\u0430 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0430: {text}\")\n    return text\n\napp.run_forever()\n\n# \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u043e\u0439 \u0437\u0430\u0434\u0430\u0447\u0438\napp.add_task(\"async_task\", args=(\"\u0410\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0439 \u043f\u0440\u0438\u043c\u0435\u0440\",))\n</code></pre>"},{"location":"ru/examples/#_4","title":"\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u0431\u0440\u043e\u043a\u0435\u0440\u043e\u0432","text":"<p>\u041f\u0440\u0438\u043c\u0435\u0440 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438 \u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f RabbitMQ \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0431\u0440\u043e\u043a\u0435\u0440\u0430.</p> <pre><code>pip install qtasks[rabbitmq]\n\nfrom qtasks.asyncio import QueueTasks\nfrom qtasks.brokers import AsyncRabbitMQBroker\n\nbroker = AsyncRabbitMQBroker(url=\"amqp://guest:guest@localhost/\")\napp = QueueTasks(broker=broker)\n\n@app.task(name=\"rabbitmq_example\")\ndef rabbitmq_example(text: str):\n    print(f\"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u043e \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435: {text}\")\n    return text\n\napp.run_forever()\n\n# \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438 \u0432 \u043e\u0447\u0435\u0440\u0435\u0434\u044c\napp.add_task(\"rabbitmq_example\", args=(\"\u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0447\u0435\u0440\u0435\u0437 RabbitMQ\",))\n</code></pre>"},{"location":"ru/features/","title":"\u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u0438","text":"<p>QueueTasks \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0433\u0438\u0431\u043a\u0443\u044e \u0438 \u043c\u043e\u0449\u043d\u0443\u044e \u043f\u043b\u0430\u0442\u0444\u043e\u0440\u043c\u0443 \u0434\u043b\u044f \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u043e\u0439 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0437\u0430\u0434\u0430\u0447.</p> <p>\u0421 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u044d\u0442\u043e\u0433\u043e \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a\u0430 \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043b\u0435\u0433\u043a\u043e \u0443\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c \u0437\u0430\u0434\u0430\u0447\u0430\u043c\u0438, \u0438\u043d\u0442\u0435\u0433\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0435 \u0431\u0440\u043e\u043a\u0435\u0440\u044b \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u0438 \u0440\u0430\u0441\u0448\u0438\u0440\u044f\u0442\u044c \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0447\u0435\u0440\u0435\u0437 \u043f\u043b\u0430\u0433\u0438\u043d\u044b. \u0412\u043e\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u0445 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u0435\u0439:</p>"},{"location":"ru/features/#_2","title":"\u041f\u0440\u043e\u0441\u0442\u0430\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0438 \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0430\u043c\u0438","text":"<ul> <li>\u041b\u0435\u0433\u043a\u043e \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0439\u0442\u0435 \u0438 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u0443\u0439\u0442\u0435 \u0437\u0430\u0434\u0430\u0447\u0438 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0434\u0435\u043a\u043e\u0440\u0430\u0442\u043e\u0440\u043e\u0432.</li> <li>\u041f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430 \u043a\u0430\u043a \u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0445, \u0442\u0430\u043a \u0438 \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0445 \u0437\u0430\u0434\u0430\u0447.</li> <li>\u041f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u0434\u043b\u044f \u0437\u0430\u0434\u0430\u0447, \u0432\u043a\u043b\u044e\u0447\u0430\u044f \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b \u0438 \u0442\u0438\u043f\u044b \u0434\u0430\u043d\u043d\u044b\u0445.</li> </ul>"},{"location":"ru/features/#_3","title":"\u0418\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f \u0441 \u0431\u0440\u043e\u043a\u0435\u0440\u0430\u043c\u0438 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439","text":"<ul> <li>\u041f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430 \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b\u0445 \u0431\u0440\u043e\u043a\u0435\u0440\u043e\u0432 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439: Redis, RabbitMQ, Kafka.</li> <li>\u041f\u0440\u043e\u0441\u0442\u0430\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0431\u0440\u043e\u043a\u0435\u0440\u043e\u0432 \u0447\u0435\u0440\u0435\u0437 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044e.</li> </ul>"},{"location":"ru/features/#_4","title":"\u0420\u0430\u0441\u0448\u0438\u0440\u044f\u0435\u043c\u043e\u0441\u0442\u044c \u0438 \u043f\u043b\u0430\u0433\u0438\u043d\u044b","text":"<ul> <li>\u041b\u0435\u0433\u043a\u043e \u0440\u0430\u0441\u0448\u0438\u0440\u044f\u0439\u0442\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043f\u043b\u0430\u0433\u0438\u043d\u043e\u0432, \u0431\u0443\u0434\u044c \u0442\u043e \u043b\u043e\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0437\u0430\u0434\u0430\u0447 \u0438\u043b\u0438 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430 \u043d\u043e\u0432\u044b\u0445 \u0431\u0440\u043e\u043a\u0435\u0440\u043e\u0432.</li> <li>\u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u043c\u043e\u0434\u0443\u043b\u0435\u0439 \u0434\u043b\u044f \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d\u043d\u044b\u0445 \u0437\u0430\u0434\u0430\u0447, \u0442\u0430\u043a\u0438\u0445 \u043a\u0430\u043a gRPC.</li> </ul>"},{"location":"ru/features/#_5","title":"\u041c\u0430\u0441\u0448\u0442\u0430\u0431\u0438\u0440\u0443\u0435\u043c\u043e\u0441\u0442\u044c","text":"<ul> <li>\u041f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430 \u043c\u0430\u0441\u0448\u0442\u0430\u0431\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u0432\u043e\u0440\u043a\u0435\u0440\u043e\u0432 \u0438 \u0431\u0440\u043e\u043a\u0435\u0440\u043e\u0432.</li> <li>\u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0431\u0430\u043b\u0430\u043d\u0441\u0438\u0440\u043e\u0432\u043a\u0430 \u043d\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u043c\u0435\u0436\u0434\u0443 \u0432\u043e\u0440\u043a\u0435\u0440\u0430\u043c\u0438.</li> </ul>"},{"location":"ru/features/#_6","title":"\u0423\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0430\u043c\u0438 \u0438 \u043e\u0448\u0438\u0431\u043a\u0430\u043c\u0438","text":"<ul> <li>\u041b\u043e\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u0434\u0430\u0447 \u0438 \u043e\u0448\u0438\u0431\u043e\u043a.</li> <li>\u041f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430 \u043f\u043e\u0432\u0442\u043e\u0440\u043d\u044b\u0445 \u043f\u043e\u043f\u044b\u0442\u043e\u043a \u0434\u043b\u044f \u0437\u0430\u0434\u0430\u0447, \u0437\u0430\u0432\u0435\u0440\u0448\u0438\u0432\u0448\u0438\u0445\u0441\u044f \u0441 \u043e\u0448\u0438\u0431\u043a\u043e\u0439.</li> </ul>"},{"location":"ru/features/#_7","title":"\u0410\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u0441 \u0437\u0430\u0434\u0430\u0447\u0430\u043c\u0438","text":"<ul> <li>\u0410\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u043e\u0435 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0437\u0430\u0434\u0430\u0447 \u0432 \u043e\u0447\u0435\u0440\u0435\u0434\u044c \u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0447\u0435\u0440\u0435\u0437 asyncio.</li> <li>\u041f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430 \u0432\u044b\u0441\u043e\u043a\u043e\u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u043e\u0447\u0435\u0440\u0435\u0434\u0435\u0439 \u0437\u0430\u0434\u0430\u0447 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c PriorityQueue \u0438 \u0441\u0435\u043c\u0430\u0444\u043e\u0440\u043e\u0432.</li> </ul>"},{"location":"ru/features/#_8","title":"\u0423\u0434\u043e\u0431\u043d\u0430\u044f \u043e\u0442\u043b\u0430\u0434\u043a\u0430 \u0438 \u043c\u043e\u043d\u0438\u0442\u043e\u0440\u0438\u043d\u0433","text":"<ul> <li>\u0418\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f \u0441 WebView \u0434\u043b\u044f \u0432\u0438\u0437\u0443\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u0437\u0430\u0434\u0430\u0447 \u0432 \u0440\u0435\u0430\u043b\u044c\u043d\u043e\u043c \u0432\u0440\u0435\u043c\u0435\u043d\u0438.</li> <li>\u041b\u043e\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0438 \u043c\u0435\u0442\u0440\u0438\u043a\u0438 \u0434\u043b\u044f \u0430\u043d\u0430\u043b\u0438\u0437\u0430 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u0434\u0430\u0447.</li> </ul>"},{"location":"ru/getting_started/","title":"\u041d\u0430\u0447\u0438\u043d\u0430\u0435\u043c \u0440\u0430\u0431\u043e\u0442\u0443 \u0441 QueueTasks","text":"<p>\u042d\u0442\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043f\u043e\u043a\u0430\u0436\u0435\u0442, \u043a\u0430\u043a \u0437\u0430 \u043f\u0430\u0440\u0443 \u043c\u0438\u043d\u0443\u0442 \u043d\u0430\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u0438 \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u043f\u0435\u0440\u0432\u0443\u044e \u0437\u0430\u0434\u0430\u0447\u0443 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e QueueTasks.</p> <ol> <li> <p>\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0430 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f <pre><code>from qtasks import QueueTasks\n# \u0438\u043b\u0438 \u0434\u043b\u044f \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u043e\u0433\u043e \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u0430:\n# from qtasks.asyncio import QueueTasks\n\napp = QueueTasks()\n</code></pre></p> </li> <li> <p>\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u0437\u0430\u0434\u0430\u0447. \u0417\u0430\u0434\u0430\u0447\u0438 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u0443\u044e\u0442\u0441\u044f \u0447\u0435\u0440\u0435\u0437 \u0434\u0435\u043a\u043e\u0440\u0430\u0442\u043e\u0440 @app.task. \u0423\u043a\u0430\u0436\u0438\u0442\u0435 \u0438\u043c\u044f \u0437\u0430\u0434\u0430\u0447\u0438, \u0447\u0442\u043e\u0431\u044b \u043c\u043e\u0436\u043d\u043e \u0431\u044b\u043b\u043e \u0432\u044b\u0437\u044b\u0432\u0430\u0442\u044c \u0435\u0451 \u0438\u0437 \u043b\u044e\u0431\u043e\u0433\u043e \u043c\u0435\u0441\u0442\u0430. <pre><code>@app.task(name=\"mytest\") # \u041e\u0431\u044b\u0447\u043d\u0430\u044f \u0437\u0430\u0434\u0430\u0447\u0430 \ndef mytest(text: str):\n    print(text)\n    return text\n\n@app.task(name=\"error_zero\") # \u0417\u0430\u0434\u0430\u0447\u0430 \u0441 \u043e\u0448\u0438\u0431\u043a\u043e\u0439\ndef error_zero():\n    result = 1/0\n    return\n</code></pre></p> </li> <li>\u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c QueueTasks <pre><code>app.run_forever()\n</code></pre></li> <li>\u041f\u043e\u043b\u043d\u044b\u0439 \u043f\u0440\u0438\u043c\u0435\u0440 <pre><code># file: app.py\nfrom qtasks import QueueTasks\n\napp = QueueTasks()\n\n@app.task(name=\"mytest\") # \u041f\u0440\u0438\u043c\u0435\u0440 \u043e\u0431\u044b\u0447\u043d\u043e\u0439 \u0437\u0430\u0434\u0430\u0447\u0438\ndef mytest(text: str):\n    print(text)\n    return text\n\n@app.task(name=\"error_zero\") # \u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u0430\u0434\u0430\u0447\u0438 \u0441 \u043e\u0448\u0438\u0431\u043a\u043e\u0439\ndef error_zero():\n    result = 1/0\n    return\n\napp.run_forever()\n</code></pre></li> </ol>"},{"location":"ru/getting_started/#_1","title":"\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0437\u0430\u0434\u0430\u0447 \u0432 \u043e\u0447\u0435\u0440\u0435\u0434\u044c.","text":"<p>\u041f\u043e\u0441\u043b\u0435 \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0430 \u0437\u0430\u0434\u0430\u0447, \u043c\u043e\u0436\u043d\u043e \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0442\u044c \u0437\u0430\u0434\u0430\u0447\u0438 \u0438\u0437 \u0434\u0440\u0443\u0433\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430 \u0438\u043b\u0438 \u0438\u043d\u0442\u0435\u0440\u043f\u0440\u0435\u0442\u0430\u0442\u043e\u0440\u0430 Python: <pre><code>from app import app\n\napp.add_task(\"mytest\", args=(\"\u0422\u0435\u0441\u0442\",))\napp.add_task(\"error_zero\")\n</code></pre></p>"},{"location":"ru/install/","title":"\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430","text":"<p>QueueTasks \u043c\u043e\u0436\u043d\u043e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u043a\u0430\u043a \u0447\u0435\u0440\u0435\u0437 PyPI, \u0442\u0430\u043a \u0438 \u0438\u0437 \u0438\u0441\u0445\u043e\u0434\u043d\u043e\u0433\u043e \u043a\u043e\u0434\u0430 \u043d\u0430 GitHub. \u041f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u044e\u0442\u0441\u044f \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0435 \u0431\u0440\u043e\u043a\u0435\u0440\u044b \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439, \u0432\u043a\u043b\u044e\u0447\u0430\u044f Redis (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e), RabbitMQ \u0438 Kafka.</p>"},{"location":"ru/install/#pypi","title":"\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u0447\u0435\u0440\u0435\u0437 PyPI","text":""},{"location":"ru/install/#redis","title":"\u0411\u0430\u0437\u043e\u0432\u0430\u044f \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 (Redis \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e)","text":"<pre><code>pip install qtasks\n</code></pre>"},{"location":"ru/install/#webview","title":"\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 WebView (\u043e\u043f\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u0439 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442 \u0434\u043b\u044f \u043c\u043e\u043d\u0438\u0442\u043e\u0440\u0438\u043d\u0433\u0430)","text":"<pre><code>pip install qtasks_webview\n</code></pre>"},{"location":"ru/install/#_2","title":"\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u0441 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u043e\u0439 \u0434\u0440\u0443\u0433\u0438\u0445 \u0431\u0440\u043e\u043a\u0435\u0440\u043e\u0432","text":"<p>Info</p> <p>\u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0439 \u0431\u0440\u043e\u043a\u0435\u0440 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d \u0438 \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043d \u043d\u0430 \u0432\u0430\u0448\u0435\u043c \u0441\u0435\u0440\u0432\u0435\u0440\u0435.</p>"},{"location":"ru/install/#rabbitmq","title":"RabbitMQ","text":"<pre><code>pip install qtasks[rabbitmq]\n</code></pre>"},{"location":"ru/install/#kafka","title":"Kafka","text":"<pre><code>pip install qtasks[kafka]\n</code></pre>"},{"location":"ru/install/#github","title":"\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u0438\u0437 \u0438\u0441\u0445\u043e\u0434\u043d\u043e\u0433\u043e \u043a\u043e\u0434\u0430 (GitHub)","text":"<p>\u0415\u0441\u043b\u0438 \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u044e\u044e \u0432\u0435\u0440\u0441\u0438\u044e \u0438\u0437 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f \u0438\u043b\u0438 \u0432\u043d\u0435\u0441\u0442\u0438 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f:</p> <pre><code>git clone https://github.com/txello/qtasks.git\ncd qtasks/\npip install .\n</code></pre>"},{"location":"ru/tests/","title":"\u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435","text":"<p>QueueTasks \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0437\u0430\u0434\u0430\u0447 \u043a\u0430\u043a \u0432 \u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u043e\u043c, \u0442\u0430\u043a \u0438 \u0432 \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u043e\u043c \u0440\u0435\u0436\u0438\u043c\u0435. \u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0435 \u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442\u044b Python, \u0442\u0430\u043a\u0438\u0435 \u043a\u0430\u043a unittest, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0435 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 \u2014 \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, aiounittest.</p>"},{"location":"ru/tests/#_2","title":"\u0411\u044b\u0441\u0442\u0440\u044b\u0439 \u0437\u0430\u043f\u0443\u0441\u043a \u0442\u0435\u0441\u0442\u043e\u0432 \u0438\u0437 \u043a\u043e\u043d\u0441\u043e\u043b\u0438","text":"<pre><code>py tests/main.py\n</code></pre>"},{"location":"ru/tests/#_3","title":"\u041f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u043c\u044b\u0435 \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a\u0438","text":"<ul> <li>\u2705 unittest \u2014 \u0434\u043b\u044f \u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0445 \u0437\u0430\u0434\u0430\u0447 \u0438 \u0431\u0430\u0437\u043e\u0432\u043e\u0439 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u044b \u0442\u0435\u0441\u0442\u043e\u0432.</li> <li>\u2705 aiounittest \u2014 \u0434\u043b\u044f \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0445 \u0437\u0430\u0434\u0430\u0447 \u0438 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u043e\u0432.</li> </ul>"},{"location":"ru/tests/#unittest","title":"\u041f\u0440\u0438\u043c\u0435\u0440 \u0442\u0435\u0441\u0442\u0430 \u0441 unittest","text":"<pre><code>import unittest\nfrom app import app\n\nclass TestTasks(unittest.TestCase):\n    def test_task_get_result(self):\n        uuid = self._result.uuid\n        result = app.get(uuid=uuid)\n        self.assertIsNotNone(result)\n\nif __name__ == \"__main__\":\n    unittest.main()\n</code></pre>"},{"location":"ru/tests/#aiounittest","title":"\u041f\u0440\u0438\u043c\u0435\u0440 \u0442\u0435\u0441\u0442\u0430 \u0441 aiounittest","text":"<pre><code>import aiounittest\nfrom app import app\n\nclass TestAsyncTasks(aiounittest.AsyncTestCase):\n    async def test_task_get_result(self):\n        uuid = (await self._add_task()).uuid\n        result = await app.get(uuid=uuid)\n        self.assertIsNotNone(result)\n\nif __name__ == \"__main__\":\n    aiounittest.main()\n</code></pre>"},{"location":"ru/api/queuetasks/","title":"QueueTasks","text":""},{"location":"ru/api/queuetasks/#qtasks.qtasks.QueueTasks","title":"<code>QueueTasks</code>","text":"<p><code>QueueTasks</code> - \u0424\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a \u0434\u043b\u044f \u043e\u0447\u0435\u0440\u0435\u0434\u0435\u0439 \u0437\u0430\u0434\u0430\u0447.</p> <p>\u0427\u0438\u0442\u0430\u0439\u0442\u0435 \u0431\u043e\u043b\u044c\u0448\u0435 \u043d\u0430 \u041f\u0435\u0440\u0432\u044b\u0435 \u0448\u0430\u0433\u0438.</p>"},{"location":"ru/api/queuetasks/#qtasks.qtasks.QueueTasks--_1","title":"\u041f\u0440\u0438\u043c\u0435\u0440","text":"<pre><code>from qtasks import QueueTasks\n\napp = QueueTasks()\n</code></pre>"},{"location":"ru/api/queuetasks/#qtasks.qtasks.QueueTasks.init_starting","title":"<code>init_starting</code>  <code>property</code>","text":"<p><code>init_starting</code> - \u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043f\u0440\u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0435 <code>QueueTasks</code>.</p>"},{"location":"ru/api/queuetasks/#qtasks.qtasks.QueueTasks.init_starting--_1","title":"\u041f\u0440\u0438\u043c\u0435\u0440\u044b","text":"<pre><code>from qtasks import QueueTasks\n\napp = QueueTasks()\n\n@app.init_starting\ndef test(self, worker, broker):\n    pass\n</code></pre>"},{"location":"ru/api/queuetasks/#qtasks.qtasks.QueueTasks.init_stoping","title":"<code>init_stoping</code>  <code>property</code>","text":"<p><code>init_stoping</code> - \u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043f\u0440\u0438 \u043e\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0435 <code>QueueTasks</code>.</p>"},{"location":"ru/api/queuetasks/#qtasks.qtasks.QueueTasks.init_stoping--_1","title":"\u041f\u0440\u0438\u043c\u0435\u0440\u044b","text":"<pre><code>from qtasks import QueueTasks\n\napp = QueueTasks()\n\n@app.init_stoping\ndef test(self, worker, broker):\n    pass\n</code></pre>"},{"location":"ru/api/queuetasks/#qtasks.qtasks.QueueTasks.init_task_running","title":"<code>init_task_running</code>  <code>property</code>","text":"<p><code>init_task_running</code> - \u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043f\u0440\u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0435 \u0437\u0430\u0434\u0430\u0447\u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439 <code>QueueTasks.worker.listen()</code>.</p>"},{"location":"ru/api/queuetasks/#qtasks.qtasks.QueueTasks.init_task_running--_1","title":"\u041f\u0440\u0438\u043c\u0435\u0440\u044b","text":"<pre><code>from qtasks import QueueTasks\n\napp = QueueTasks()\n\n@app.init_task_running\ndef test(self, task_func: TaskExecSchema, task_broker: TaskPrioritySchema):\n    pass\n</code></pre>"},{"location":"ru/api/queuetasks/#qtasks.qtasks.QueueTasks.init_task_stoping","title":"<code>init_task_stoping</code>  <code>property</code>","text":"<p><code>init_task_stoping</code> - \u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043f\u0440\u0438 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u0438 \u0437\u0430\u0434\u0430\u0447\u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439 <code>QueueTasks.worker.listen()</code>.</p>"},{"location":"ru/api/queuetasks/#qtasks.qtasks.QueueTasks.init_task_stoping--_1","title":"\u041f\u0440\u0438\u043c\u0435\u0440\u044b","text":"<pre><code>from qtasks import QueueTasks\n\napp = QueueTasks()\n\n@app.init_task_stoping\ndef test(self, task_func: TaskExecSchema, task_broker: TaskPrioritySchema, returning: TaskStatusSuccessSchema|TaskStatusErrorSchema):\n    pass\n</code></pre>"},{"location":"ru/api/queuetasks/#qtasks.qtasks.QueueTasks.init_worker_running","title":"<code>init_worker_running</code>  <code>property</code>","text":"<p><code>init_worker_running</code> - \u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043f\u0440\u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0435 <code>QueueTasks.worker.worker()</code>.</p>"},{"location":"ru/api/queuetasks/#qtasks.qtasks.QueueTasks.init_worker_running--_1","title":"\u041f\u0440\u0438\u043c\u0435\u0440\u044b","text":"<pre><code>from qtasks import QueueTasks\n\napp = QueueTasks()\n\n@app.init_worker_running\ndef test(self, worker):\n    pass\n</code></pre>"},{"location":"ru/api/queuetasks/#qtasks.qtasks.QueueTasks.init_worker_stoping","title":"<code>init_worker_stoping</code>  <code>property</code>","text":"<p><code>init_worker_stoping</code> - \u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043f\u0440\u0438 \u043e\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0435 <code>QueueTasks.worker.worker()</code>.</p>"},{"location":"ru/api/queuetasks/#qtasks.qtasks.QueueTasks.init_worker_stoping--_1","title":"\u041f\u0440\u0438\u043c\u0435\u0440\u044b","text":"<pre><code>from qtasks import QueueTasks\n\napp = QueueTasks()\n\n@app.init_worker_stoping\ndef test(self, worker):\n    pass\n</code></pre>"},{"location":"ru/api/queuetasks/#qtasks.qtasks.QueueTasks.__init__","title":"<code>__init__(name='QueueTasks', broker=None, worker=None)</code>","text":"<p>\u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f QueueTasks.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>\u0418\u043c\u044f \u043f\u0440\u043e\u0435\u043a\u0442\u0430. \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: <code>QueueTasks</code>.</p> <code>'QueueTasks'</code>"},{"location":"ru/api/queuetasks/#qtasks.qtasks.QueueTasks.add_task","title":"<code>add_task(task_name, priority=0, args=None, kwargs=None)</code>","text":"<p>\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0437\u0430\u0434\u0430\u0447\u0443.</p> <p>Parameters:</p> Name Type Description Default <code>task_name</code> <code>str</code> <p>\u0418\u043c\u044f \u0437\u0430\u0434\u0430\u0447\u0438.</p> required <code>priority</code> <code>int</code> <p>\u041f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442 \u0437\u0430\u0434\u0430\u0447\u0438. \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e 0.</p> <code>0</code> <code>args</code> <code>tuple</code> <p>args \u0437\u0430\u0434\u0430\u0447\u0438. \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e <code>()</code>.</p> <code>None</code> <code>kwargs</code> <code>dict</code> <p>kwags \u0437\u0430\u0434\u0430\u0447\u0438. \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e <code>{}</code>.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>Task</code> <code>Task</code> <p><code>schemas.task.Task</code>.</p>"},{"location":"ru/api/queuetasks/#qtasks.qtasks.QueueTasks.get","title":"<code>get(uuid)</code>","text":"<p>\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0437\u0430\u0434\u0430\u0447\u0443.</p> <p>Parameters:</p> Name Type Description Default <code>uuid</code> <code>UUID | str</code> <p>UUID \u0417\u0430\u0434\u0430\u0447\u0438.</p> required <p>Returns:</p> Type Description <code>Task | None</code> <p>Task|None: \u0414\u0430\u043d\u043d\u044b\u0435 \u0437\u0430\u0434\u0430\u0447\u0438 \u0438\u043b\u0438 None.</p>"},{"location":"ru/api/queuetasks/#qtasks.qtasks.QueueTasks.include_router","title":"<code>include_router(router)</code>","text":"<p>\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c Router.</p> <p>Parameters:</p> Name Type Description Default <code>router</code> <code>Router</code> <p>\u0420\u043e\u0443\u0442\u0435\u0440 <code>qtasks.routers.Router</code>.</p> required"},{"location":"ru/api/queuetasks/#qtasks.qtasks.QueueTasks.run_forever","title":"<code>run_forever(starter=None, num_workers=4, reset_config=True)</code>","text":"<p>\u0417\u0430\u043f\u0443\u0441\u043a \u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u043e \u0412\u043e\u0440\u043a\u0435\u0440 \u0438 \u0411\u0440\u043e\u043a\u0435\u0440.</p> <p>Parameters:</p> Name Type Description Default <code>num_workers</code> <code>int</code> <p>\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0437\u0430\u043f\u0443\u0449\u0435\u043d\u043d\u044b\u0445 \u0432\u043e\u0440\u043a\u0435\u0440\u043e\u0432. \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: 4.</p> <code>4</code> <code>reset_config</code> <code>bool</code> <p>\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c config \u0443 \u0432\u043e\u0440\u043a\u0435\u0440\u0430 \u0438 \u0431\u0440\u043e\u043a\u0435\u0440\u0430. \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: True.</p> <code>True</code>"},{"location":"ru/api/queuetasks/#qtasks.qtasks.QueueTasks.stop","title":"<code>stop()</code>","text":"<p>\u041e\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0432\u0441\u0435 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u044b.</p>"},{"location":"ru/api/queuetasks/#qtasks.qtasks.QueueTasks.task","title":"<code>task(name=None)</code>","text":"<p>\u0414\u0435\u043a\u043e\u0440\u0430\u0442\u043e\u0440 \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0437\u0430\u0434\u0430\u0447.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>\u0418\u043c\u044f \u0437\u0430\u0434\u0430\u0447\u0438. \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: <code>func.__name__</code>.</p> <code>None</code>"},{"location":"ru/api/router/","title":"\u0420\u043e\u0443\u0442\u0435\u0440","text":""},{"location":"ru/api/router/#qtasks.routers.router.Router","title":"<code>Router</code>","text":"<p>\u0420\u043e\u0443\u0442\u0435\u0440, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0445\u0440\u0430\u043d\u0438\u0442 \u0432 \u0441\u0435\u0431\u0435 \u0437\u0430\u0434\u0430\u0447\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u043a \u0441\u0435\u0431\u0435 \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 <code>QueueTasks</code>.</p>"},{"location":"ru/api/router/#qtasks.routers.router.Router--example","title":"Example","text":"<pre><code>from qtasks import QueueTasks, Router\n\napp = QueueTasks()\n\nrouter = Router()\n\n@router.task()\nasync def test():\n    pass\n\napp.include_router(router)\n</code></pre>"},{"location":"ru/api/router/#qtasks.routers.router.Router.task","title":"<code>task(name=None)</code>","text":"<p>\u0414\u0435\u043a\u043e\u0440\u0430\u0442\u043e\u0440 \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0437\u0430\u0434\u0430\u0447.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>\u0418\u043c\u044f \u0437\u0430\u0434\u0430\u0447\u0438. \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: <code>func.__name__</code>.</p> <code>None</code>"},{"location":"ru/api/webview/","title":"WebView","text":""},{"location":"ru/api/webview/#_1","title":"\u0412 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0435...","text":""},{"location":"ru/api/brokers/async_redisbroker/","title":"AsyncRedisBroker","text":""},{"location":"ru/api/brokers/async_redisbroker/#qtasks.brokers.async_redis.AsyncRedisBroker","title":"<code>AsyncRedisBroker</code>","text":"<p>               Bases: <code>BaseBroker</code></p> <p>\u0411\u0440\u043e\u043a\u0435\u0440, \u0441\u043b\u0443\u0448\u0430\u044e\u0449\u0438\u0439 Redis \u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u044e\u0449\u0438\u0439 \u0437\u0430\u0434\u0430\u0447\u0438 \u0432 \u043e\u0447\u0435\u0440\u0435\u0434\u044c.</p>"},{"location":"ru/api/brokers/async_redisbroker/#qtasks.brokers.async_redis.AsyncRedisBroker--_1","title":"\u041f\u0440\u0438\u043c\u0435\u0440","text":"<pre><code>from qtasks import QueueTasks\nfrom qtasks.brokers import AsyncRedisBroker\n\nbroker = AsyncRedisBroker(name=\"QueueTasks\", url=\"redis://localhost:6379/2\")\n\napp = QueueTasks(broker=broker)\n</code></pre>"},{"location":"ru/api/brokers/async_redisbroker/#qtasks.brokers.async_redis.AsyncRedisBroker.add","title":"<code>add(task_name, priority=0, *args, **kwargs)</code>  <code>async</code>","text":"<p>\u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u0437\u0430\u0434\u0430\u0447\u0443 \u0432 \u0431\u0440\u043e\u043a\u0435\u0440.</p> <p>Parameters:</p> Name Type Description Default <code>task_name</code> <code>str</code> <p>\u0418\u043c\u044f \u0437\u0430\u0434\u0430\u0447\u0438.</p> required <code>priority</code> <code>int</code> <p>\u041f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442 \u0437\u0430\u0434\u0430\u0447\u0438. \u041f\u043e \u0443\u043c\u043e\u043b\u0430\u043d\u0438\u044e: 0.</p> <code>0</code> <code>args</code> <code>tuple</code> <p>\u0410\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b \u0437\u0430\u0434\u0430\u0447\u0438 \u0442\u0438\u043f\u0430 args.</p> <code>()</code> <code>kwargs</code> <code>dict</code> <p>\u0410\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b \u0437\u0430\u0434\u0430\u0447\u0438 \u0442\u0438\u043f\u0430 kwargs.</p> <code>{}</code> <p>Returns:</p> Name Type Description <code>Task</code> <code>Task</code> <p><code>schemas.task.Task</code></p>"},{"location":"ru/api/brokers/async_redisbroker/#qtasks.brokers.async_redis.AsyncRedisBroker.get","title":"<code>get(uuid)</code>  <code>async</code>","text":"<p>\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0437\u0430\u0434\u0430\u0447\u0435.</p> <p>Parameters:</p> Name Type Description Default <code>uuid</code> <code>UUID | str</code> <p>UUID \u0437\u0430\u0434\u0430\u0447\u0438.</p> required <p>Returns:</p> Type Description <code>Task | None</code> <p>Task|None: \u0415\u0441\u043b\u0438 \u0435\u0441\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0437\u0430\u0434\u0430\u0447\u0435, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 <code>schemas.task.Task</code>, \u0438\u043d\u0430\u0447\u0435 <code>None</code>.</p>"},{"location":"ru/api/brokers/async_redisbroker/#qtasks.brokers.async_redis.AsyncRedisBroker.listen","title":"<code>listen(worker)</code>  <code>async</code>","text":"<p>\u0421\u043b\u0443\u0448\u0430\u0435\u0442 \u043e\u0447\u0435\u0440\u0435\u0434\u044c Redis \u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u0451\u0442 \u0437\u0430\u0434\u0430\u0447\u0438 \u0432\u043e\u0440\u043a\u0435\u0440\u0443.</p> <p>Parameters:</p> Name Type Description Default <code>worker</code> <code>BaseWorker</code> <p>\u041a\u043b\u0430\u0441\u0441 \u0432\u043e\u0440\u043a\u0435\u0440\u0430.</p> required"},{"location":"ru/api/brokers/async_redisbroker/#qtasks.brokers.async_redis.AsyncRedisBroker.remove_finished_task","title":"<code>remove_finished_task(task_broker, model)</code>  <code>async</code>","text":"<p>\u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0430 \u0447\u0435\u0440\u0435\u0437 \u0444\u0443\u043d\u043a\u0446\u0438\u044e <code>self.storage.remove_finished_task</code>.</p> <p>Parameters:</p> Name Type Description Default <code>task_broker</code> <code>TaskPrioritySchema</code> <p>\u0421\u0445\u0435\u043c\u0430 \u043f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442\u043d\u043e\u0439 \u0437\u0430\u0434\u0430\u0447\u0438.</p> required <code>model</code> <code>TaskStatusNewSchema | TaskStatusErrorSchema</code> <p>\u041c\u043e\u0434\u0435\u043b\u044c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u0434\u0430\u0447\u0438.</p> required"},{"location":"ru/api/brokers/async_redisbroker/#qtasks.brokers.async_redis.AsyncRedisBroker.start","title":"<code>start(worker)</code>  <code>async</code>","text":"<p>\u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442 \u0431\u0440\u043e\u043a\u0435\u0440.</p> <p>Parameters:</p> Name Type Description Default <code>worker</code> <code>BaseWorker</code> <p>\u041a\u043b\u0430\u0441\u0441 \u0412\u043e\u0440\u043a\u0435\u0440\u0430.</p> required"},{"location":"ru/api/brokers/async_redisbroker/#qtasks.brokers.async_redis.AsyncRedisBroker.stop","title":"<code>stop()</code>  <code>async</code>","text":"<p>\u041e\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0431\u0440\u043e\u043a\u0435\u0440.</p>"},{"location":"ru/api/brokers/async_redisbroker/#qtasks.brokers.async_redis.AsyncRedisBroker.update","title":"<code>update(**kwargs)</code>  <code>async</code>","text":"<p>\u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0437\u0430\u0434\u0430\u0447\u0435.</p> <p>Parameters:</p> Name Type Description Default <code>kwargs</code> <code>dict</code> <p>\u0434\u0430\u043d\u043d\u044b\u0435 \u0437\u0430\u0434\u0430\u0447\u0438 \u0442\u0438\u043f\u0430 kwargs.</p> <code>{}</code>"},{"location":"ru/api/brokers/basebroker/","title":"BaseBroker - \u041f\u0438\u0448\u0435\u043c \u0441\u0432\u043e\u0439 \u0431\u0440\u043e\u043a\u0435\u0440","text":""},{"location":"ru/api/brokers/basebroker/#qtasks.brokers.base.BaseBroker","title":"<code>BaseBroker</code>","text":"<p>               Bases: <code>ABC</code></p> <p><code>BaseBroker</code> - \u0410\u0431\u0441\u0442\u0440\u0430\u043a\u0442\u043d\u044b\u0439 \u043a\u043b\u0430\u0441\u0441, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u043e\u043c \u0434\u043b\u044f \u0411\u0440\u043e\u043a\u0435\u0440\u043e\u0432.</p>"},{"location":"ru/api/brokers/basebroker/#qtasks.brokers.base.BaseBroker--_1","title":"\u041f\u0440\u0438\u043c\u0435\u0440","text":"<pre><code>from qtasks import QueueTasks\nfrom qtasks.brokers.base import BaseBroker\n\nclass MyBroker(BaseBroker):\n    def __init__(self, name: str = None, storage: BaseStorage = None):\n        super().__init__(name=name, storage=storage)\n        pass\n</code></pre>"},{"location":"ru/api/brokers/basebroker/#qtasks.brokers.base.BaseBroker.add","title":"<code>add(task_name, priority=0, *args, **kwargs)</code>  <code>abstractmethod</code>","text":"<p>\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438 \u0432 \u0431\u0440\u043e\u043a\u0435\u0440.</p> <p>Parameters:</p> Name Type Description Default <code>task_name</code> <code>str</code> <p>\u0418\u043c\u044f \u0437\u0430\u0434\u0430\u0447\u0438.</p> required <code>priority</code> <code>int</code> <p>\u041f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442 \u0437\u0430\u0434\u0430\u0447\u0438. \u041f\u043e \u0443\u043c\u043e\u043b\u0430\u043d\u0438\u044e: 0.</p> <code>0</code> <code>args</code> <code>tuple</code> <p>\u0410\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b \u0437\u0430\u0434\u0430\u0447\u0438 \u0442\u0438\u043f\u0430 args.</p> <code>()</code> <code>kwargs</code> <code>dict</code> <p>\u0410\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b \u0437\u0430\u0434\u0430\u0447\u0438 \u0442\u0438\u043f\u0430 kwargs.</p> <code>{}</code> <p>Returns:</p> Name Type Description <code>Task</code> <p><code>schemas.task.Task</code></p>"},{"location":"ru/api/brokers/basebroker/#qtasks.brokers.base.BaseBroker.get","title":"<code>get(uuid)</code>  <code>abstractmethod</code>","text":"<p>\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0437\u0430\u0434\u0430\u0447\u0435.</p> <p>Parameters:</p> Name Type Description Default <code>uuid</code> <code>UUID | str</code> <p>UUID \u0437\u0430\u0434\u0430\u0447\u0438.</p> required <p>Returns:</p> Type Description <code>Task | None</code> <p>Task|None: \u0415\u0441\u043b\u0438 \u0435\u0441\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0437\u0430\u0434\u0430\u0447\u0435, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 <code>schemas.task.Task</code>, \u0438\u043d\u0430\u0447\u0435 <code>None</code>.</p>"},{"location":"ru/api/brokers/basebroker/#qtasks.brokers.base.BaseBroker.include_plugin","title":"<code>include_plugin(plugin, name=None)</code>","text":"<p>\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043f\u043b\u0430\u0433\u0438\u043d \u0432 \u043a\u043b\u0430\u0441\u0441.</p> <p>Parameters:</p> Name Type Description Default <code>plugin</code> <code>BasePlugin</code> <p>\u041f\u043b\u0430\u0433\u0438\u043d</p> required <code>name</code> <code>str</code> <p>\u0418\u043c\u044f \u043f\u043b\u0430\u0433\u0438\u043d\u0430. \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: <code>plugin.name</code>.</p> <code>None</code>"},{"location":"ru/api/brokers/basebroker/#qtasks.brokers.base.BaseBroker.start","title":"<code>start(worker=None)</code>  <code>abstractmethod</code>","text":"<p>\u0417\u0430\u043f\u0443\u0441\u043a \u0411\u0440\u043e\u043a\u0435\u0440\u0430. \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0437\u0430\u0434\u0435\u0439\u0441\u0442\u0432\u0443\u0435\u0442\u0441\u044f \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u043c \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u043e\u043c <code>QueueTasks</code> \u0447\u0435\u0440\u0435\u0437 <code>run_forever</code>.</p> <p>Parameters:</p> Name Type Description Default <code>worker</code> <code>BaseWorker</code> <p>\u043a\u043b\u0430\u0441\u0441 \u0412\u043e\u0440\u043a\u0435\u0440\u0430. \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: <code>None</code>.</p> <code>None</code>"},{"location":"ru/api/brokers/basebroker/#qtasks.brokers.base.BaseBroker.stop","title":"<code>stop()</code>  <code>abstractmethod</code>","text":"<p>\u041e\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0431\u0440\u043e\u043a\u0435\u0440. \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0437\u0430\u0434\u0435\u0439\u0441\u0442\u0432\u0443\u0435\u0442\u0441\u044f \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u043c \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u043e\u043c <code>QueueTasks</code> \u043f\u043e\u0441\u043b\u0435 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u0438 <code>run_forever</code>.</p>"},{"location":"ru/api/brokers/basebroker/#qtasks.brokers.base.BaseBroker.update","title":"<code>update(**kwargs)</code>  <code>abstractmethod</code>","text":"<p>\u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0437\u0430\u0434\u0430\u0447\u0435.</p> <p>Parameters:</p> Name Type Description Default <code>kwargs</code> <code>dict</code> <p>\u0434\u0430\u043d\u043d\u044b\u0435 \u0437\u0430\u0434\u0430\u0447\u0438 \u0442\u0438\u043f\u0430 kwargs.</p> <code>{}</code>"},{"location":"ru/api/brokers/basebroker/#qtasks.brokers.base.BaseBroker.update_config","title":"<code>update_config(config)</code>","text":"<p>\u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u0442 \u043a\u043e\u043d\u0444\u0438\u0433 \u0431\u0440\u043e\u043a\u0435\u0440\u0430.</p> <p>Parameters:</p> Name Type Description Default <code>config</code> <code>QueueConfig</code> <p>\u041a\u043e\u043d\u0444\u0438\u0433.</p> required"},{"location":"ru/api/brokers/sync_redisbroker/","title":"SyncRedisBroker","text":""},{"location":"ru/api/brokers/sync_redisbroker/#qtasks.brokers.sync_redis.SyncRedisBroker","title":"<code>SyncRedisBroker</code>","text":"<p>               Bases: <code>BaseBroker</code></p> <p>\u0411\u0440\u043e\u043a\u0435\u0440, \u0441\u043b\u0443\u0448\u0430\u044e\u0449\u0438\u0439 Redis \u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u044e\u0449\u0438\u0439 \u0437\u0430\u0434\u0430\u0447\u0438 \u0432 \u043e\u0447\u0435\u0440\u0435\u0434\u044c.</p>"},{"location":"ru/api/brokers/sync_redisbroker/#qtasks.brokers.sync_redis.SyncRedisBroker--_1","title":"\u041f\u0440\u0438\u043c\u0435\u0440","text":"<pre><code>from qtasks import QueueTasks\nfrom qtasks.brokers import SyncRedisBroker\n\nbroker = SyncRedisBroker(name=\"QueueTasks\", url=\"redis://localhost:6379/2\")\n\napp = QueueTasks(broker=broker)\n</code></pre>"},{"location":"ru/api/brokers/sync_redisbroker/#qtasks.brokers.sync_redis.SyncRedisBroker.add","title":"<code>add(task_name, priority=0, *args, **kwargs)</code>","text":"<p>\u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u0437\u0430\u0434\u0430\u0447\u0443 \u0432 \u0431\u0440\u043e\u043a\u0435\u0440.</p> <p>Parameters:</p> Name Type Description Default <code>task_name</code> <code>str</code> <p>\u0418\u043c\u044f \u0437\u0430\u0434\u0430\u0447\u0438.</p> required <code>priority</code> <code>int</code> <p>\u041f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442 \u0437\u0430\u0434\u0430\u0447\u0438. \u041f\u043e \u0443\u043c\u043e\u043b\u0430\u043d\u0438\u044e: 0.</p> <code>0</code> <code>args</code> <code>tuple</code> <p>\u0410\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b \u0437\u0430\u0434\u0430\u0447\u0438 \u0442\u0438\u043f\u0430 args.</p> <code>()</code> <code>kwargs</code> <code>dict</code> <p>\u0410\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b \u0437\u0430\u0434\u0430\u0447\u0438 \u0442\u0438\u043f\u0430 kwargs.</p> <code>{}</code> <p>Returns:</p> Name Type Description <code>Task</code> <code>Task</code> <p><code>schemas.task.Task</code></p>"},{"location":"ru/api/brokers/sync_redisbroker/#qtasks.brokers.sync_redis.SyncRedisBroker.get","title":"<code>get(uuid)</code>","text":"<p>\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0437\u0430\u0434\u0430\u0447\u0435.</p> <p>Parameters:</p> Name Type Description Default <code>uuid</code> <code>UUID | str</code> <p>UUID \u0437\u0430\u0434\u0430\u0447\u0438.</p> required <p>Returns:</p> Type Description <code>Task | None</code> <p>Task|None: \u0415\u0441\u043b\u0438 \u0435\u0441\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0437\u0430\u0434\u0430\u0447\u0435, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 <code>schemas.task.Task</code>, \u0438\u043d\u0430\u0447\u0435 <code>None</code>.</p>"},{"location":"ru/api/brokers/sync_redisbroker/#qtasks.brokers.sync_redis.SyncRedisBroker.listen","title":"<code>listen(worker)</code>","text":"<p>\u0421\u043b\u0443\u0448\u0430\u0435\u0442 \u043e\u0447\u0435\u0440\u0435\u0434\u044c Redis \u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u0451\u0442 \u0437\u0430\u0434\u0430\u0447\u0438 \u0432\u043e\u0440\u043a\u0435\u0440\u0443.</p> <p>Parameters:</p> Name Type Description Default <code>worker</code> <code>BaseWorker</code> <p>\u041a\u043b\u0430\u0441\u0441 \u0432\u043e\u0440\u043a\u0435\u0440\u0430.</p> required"},{"location":"ru/api/brokers/sync_redisbroker/#qtasks.brokers.sync_redis.SyncRedisBroker.remove_finished_task","title":"<code>remove_finished_task(task_broker, model)</code>","text":"<p>\u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0430 \u0447\u0435\u0440\u0435\u0437 \u0444\u0443\u043d\u043a\u0446\u0438\u044e <code>self.storage.remove_finished_task</code>.</p> <p>Parameters:</p> Name Type Description Default <code>task_broker</code> <code>TaskPrioritySchema</code> <p>\u0421\u0445\u0435\u043c\u0430 \u043f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442\u043d\u043e\u0439 \u0437\u0430\u0434\u0430\u0447\u0438.</p> required <code>model</code> <code>TaskStatusNewSchema | TaskStatusErrorSchema</code> <p>\u041c\u043e\u0434\u0435\u043b\u044c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u0434\u0430\u0447\u0438.</p> required"},{"location":"ru/api/brokers/sync_redisbroker/#qtasks.brokers.sync_redis.SyncRedisBroker.start","title":"<code>start(worker)</code>","text":"<p>\u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442 \u0431\u0440\u043e\u043a\u0435\u0440.</p> <p>Parameters:</p> Name Type Description Default <code>worker</code> <code>BaseWorker</code> <p>\u041a\u043b\u0430\u0441\u0441 \u0412\u043e\u0440\u043a\u0435\u0440\u0430.</p> required"},{"location":"ru/api/brokers/sync_redisbroker/#qtasks.brokers.sync_redis.SyncRedisBroker.stop","title":"<code>stop()</code>","text":"<p>\u041e\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0431\u0440\u043e\u043a\u0435\u0440.</p>"},{"location":"ru/api/brokers/sync_redisbroker/#qtasks.brokers.sync_redis.SyncRedisBroker.update","title":"<code>update(**kwargs)</code>","text":"<p>\u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0437\u0430\u0434\u0430\u0447\u0435.</p> <p>Parameters:</p> Name Type Description Default <code>kwargs</code> <code>dict</code> <p>\u0434\u0430\u043d\u043d\u044b\u0435 \u0437\u0430\u0434\u0430\u0447\u0438 \u0442\u0438\u043f\u0430 kwargs.</p> <code>{}</code>"},{"location":"ru/api/models/task/","title":"Task","text":""},{"location":"ru/api/models/task/#qtasks.schemas.task.Task","title":"<code>Task</code>  <code>dataclass</code>","text":"<p><code>Task</code> \u043c\u043e\u0434\u0435\u043b\u044c.</p> <p>Parameters:</p> Name Type Description Default <code>status</code> <code>str</code> <p>\u0421\u0442\u0430\u0442\u0443\u0441.</p> required <code>uuid</code> <code>UUID</code> <p>UUID.</p> required <code>priority</code> <code>int</code> <p>\u041f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442.</p> required <code>task_name</code> <code>str</code> <p>\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435.</p> required <code>args</code> <code>tuple[str]</code> <p>\u0410\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b \u0442\u0438\u043f\u0430 args.</p> required <code>kwargs</code> <code>dict[str, Any]</code> <p>\u0410\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b \u0442\u0438\u043f\u0430 kwargs.</p> required <code>created_at</code> <code>datetime</code> <p>\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f.</p> required <code>updated_at</code> <code>datetime</code> <p>\u0414\u0430\u0442\u0430 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f.</p> required <code>returning</code> <code>str | None</code> <p>\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442. \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: <code>None</code>.</p> <code>None</code> <code>traceback</code> <code>str | None</code> <p>\u0422\u0440\u0430\u0441\u0441\u0438\u0440\u043e\u0432\u043a\u0430 \u043e\u0448\u0438\u0431\u043e\u043a. \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: <code>None</code>.</p> <code>None</code>"},{"location":"ru/api/schemas/global_config/","title":"GlobalConfig","text":""},{"location":"ru/api/schemas/global_config/#qtasks.schemas.global_config.GlobalConfigSchema","title":"<code>GlobalConfigSchema</code>  <code>dataclass</code>","text":"<p><code>GlobalConfigSchema</code> \u0441\u0445\u0435\u043c\u0430.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 <code>GlobalConfig.name</code>.</p> required"},{"location":"ru/api/schemas/inits/","title":"Inits","text":""},{"location":"ru/api/schemas/inits/#qtasks.schemas.inits.InitsExecSchema","title":"<code>InitsExecSchema</code>  <code>dataclass</code>","text":"<p><code>InitsExecSchema</code> \u0441\u0445\u0435\u043c\u0430.</p> <p>Parameters:</p> Name Type Description Default <code>typing</code> <code>str</code> <p>\u0422\u0438\u043f \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438.</p> required <code>func</code> <code>FunctionType</code> <p>\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438.</p> required <code>awaiting</code> <code>bool</code> <p>\u0410\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u043e\u0441\u0442\u044c \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438. \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: False</p> <code>False</code>"},{"location":"ru/api/schemas/task_exec/","title":"TaskExec","text":""},{"location":"ru/api/schemas/task_exec/#qtasks.schemas.task_exec.TaskExecSchema","title":"<code>TaskExecSchema</code>  <code>dataclass</code>","text":"<p><code>TaskExecSchema</code> \u0441\u0445\u0435\u043c\u0430.</p> <p>Parameters:</p> Name Type Description Default <code>priority</code> <code>int</code> <p>\u041f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442.</p> required <code>name</code> <code>str</code> <p>\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435.</p> required <code>func</code> <code>FunctionType</code> <p>\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0437\u0430\u0434\u0430\u0447\u0438.</p> required <code>awaiting</code> <code>bool</code> <p>\u0410\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u043e\u0441\u0442\u044c \u0437\u0430\u0434\u0430\u0447\u0438. \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: False</p> <code>False</code>"},{"location":"ru/api/schemas/task_exec/#qtasks.schemas.task_exec.TaskPrioritySchema","title":"<code>TaskPrioritySchema</code>  <code>dataclass</code>","text":"<p><code>TaskPrioritySchema</code> \u0441\u0445\u0435\u043c\u0430.</p> <p>Parameters:</p> Name Type Description Default <code>priority</code> <code>int</code> <p>\u041f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442.</p> required <code>uuid</code> <code>UUID</code> <p>UUID.</p> required <code>name</code> <code>str</code> <p>\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435.</p> required <code>args</code> <code>tuple[str]</code> <p>\u0410\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b \u0442\u0438\u043f\u0430 args.</p> <code>list()</code> <code>kwargs</code> <code>dict[str, str]</code> <p>\u0410\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b \u0442\u0438\u043f\u0430 kwargs.</p> <code>dict()</code> <code>created_at</code> <code>float</code> <p>\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 <code>timestamp</code>.</p> <code>0.0</code> <code>updated_at</code> <code>float</code> <p>\u0414\u0430\u0442\u0430 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 <code>timestamp</code>.</p> <code>0.0</code>"},{"location":"ru/api/schemas/task_status/","title":"TaskStatus","text":""},{"location":"ru/api/schemas/task_status/#qtasks.schemas.task_status.BaseTaskStatusSchema","title":"<code>BaseTaskStatusSchema</code>  <code>dataclass</code>","text":"<p><code>BaseTaskStatusSchema</code> \u0441\u0445\u0435\u043c\u0430.</p> <p>Parameters:</p> Name Type Description Default <code>status</code> <code>str</code> <p>\u0421\u0442\u0430\u0442\u0443\u0441.</p> required <code>priority</code> <code>int</code> <p>\u041f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442.</p> <code>0</code> <code>task_name</code> <code>str</code> <p>\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435.</p> <code>''</code> <code>args</code> <code>tuple[str]</code> <p>\u0410\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b \u0442\u0438\u043f\u0430 args.</p> <code>lambda: dumps(())()</code> <code>kwargs</code> <code>dict[str, str]</code> <p>\u0410\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b \u0442\u0438\u043f\u0430 kwargs.</p> <code>lambda: dumps({})()</code> <code>created_at</code> <code>float</code> <p>\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 <code>timestamp</code>.</p> <code>0.0</code> <code>updated_at</code> <code>float</code> <p>\u0414\u0430\u0442\u0430 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 <code>timestamp</code>.</p> <code>time()</code> <code>returning</code> <code>str | None</code> <p>\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442. \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: <code>None</code>.</p> required <code>traceback</code> <code>str | None</code> <p>\u0422\u0440\u0430\u0441\u0441\u0438\u0440\u043e\u0432\u043a\u0430 \u043e\u0448\u0438\u0431\u043e\u043a. \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: <code>None</code>.</p> required"},{"location":"ru/api/schemas/task_status/#qtasks.schemas.task_status.TaskStatusErrorSchema","title":"<code>TaskStatusErrorSchema</code>  <code>dataclass</code>","text":"<p>               Bases: <code>BaseTaskStatusSchema</code></p> <p><code>TaskStatusErrorSchema</code> \u0441\u0445\u0435\u043c\u0430.</p> <p>Parameters:</p> Name Type Description Default <code>status</code> <code>str</code> <p>\u0421\u0442\u0430\u0442\u0443\u0441.</p> <code>'error'</code> <code>traceback</code> <code>str</code> <p>\u0422\u0440\u0430\u0441\u0441\u0438\u0440\u043e\u0432\u043a\u0430 \u043e\u0448\u0438\u0431\u043e\u043a.</p> <code>''</code>"},{"location":"ru/api/schemas/task_status/#qtasks.schemas.task_status.TaskStatusNewSchema","title":"<code>TaskStatusNewSchema</code>  <code>dataclass</code>","text":"<p>               Bases: <code>BaseTaskStatusSchema</code></p> <p><code>TaskStatusNewSchema</code> \u0441\u0445\u0435\u043c\u0430.</p> <p>Parameters:</p> Name Type Description Default <code>status</code> <code>str</code> <p>\u0421\u0442\u0430\u0442\u0443\u0441.</p> <code>'new'</code>"},{"location":"ru/api/schemas/task_status/#qtasks.schemas.task_status.TaskStatusProcessSchema","title":"<code>TaskStatusProcessSchema</code>  <code>dataclass</code>","text":"<p>               Bases: <code>BaseTaskStatusSchema</code></p> <p><code>TaskStatusProcessSchema</code> \u0441\u0445\u0435\u043c\u0430.</p> <p>Parameters:</p> Name Type Description Default <code>status</code> <code>str</code> <p>\u0421\u0442\u0430\u0442\u0443\u0441.</p> <code>'process'</code>"},{"location":"ru/api/schemas/task_status/#qtasks.schemas.task_status.TaskStatusSuccessSchema","title":"<code>TaskStatusSuccessSchema</code>  <code>dataclass</code>","text":"<p>               Bases: <code>BaseTaskStatusSchema</code></p> <p><code>TaskStatusSuccessSchema</code> \u0441\u0445\u0435\u043c\u0430.</p> <p>Parameters:</p> Name Type Description Default <code>status</code> <code>str</code> <p>\u0421\u0442\u0430\u0442\u0443\u0441.</p> <code>'success'</code> <code>returning</code> <code>str</code> <p>\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442.</p> <code>''</code>"},{"location":"ru/api/storages/async_redisstorage/","title":"AsyncRedisStorage","text":""},{"location":"ru/api/storages/async_redisstorage/#qtasks.storages.async_redis.AsyncRedisStorage","title":"<code>AsyncRedisStorage</code>","text":"<p>               Bases: <code>BaseStorage</code></p> <p>\u0425\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435, \u0440\u0430\u0431\u043e\u0442\u0430\u044e\u0449\u0438\u0439 \u0441 Redis, \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0437\u0430\u0434\u0430\u0447\u0430\u0445.</p>"},{"location":"ru/api/storages/async_redisstorage/#qtasks.storages.async_redis.AsyncRedisStorage--example","title":"Example","text":"<pre><code>from qtasks import QueueTasks\nfrom qtasks.brokers import AsyncRedisBroker\nfrom qtasks.storages import AsyncRedisStorage\n\nstorage = AsyncRedisBroker(name=\"QueueTasks\")\nbroker = AsyncRedisBroker(name=\"QueueTasks\", storage=storage)\n\napp = QueueTasks(broker=broker)\n</code></pre>"},{"location":"ru/api/storages/async_redisstorage/#qtasks.storages.async_redis.AsyncRedisStorage.add","title":"<code>add(uuid, task_status)</code>  <code>async</code>","text":"<p>\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438 \u0432 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435.</p> <p>Parameters:</p> Name Type Description Default <code>uuid</code> <code>UUID | str</code> <p>UUID \u0437\u0430\u0434\u0430\u0447\u0438.</p> required <code>task_status</code> <code>TaskStatusNewSchema</code> <p>\u0421\u0445\u0435\u043c\u0430 \u0441\u0442\u0430\u0442\u0443\u0441\u0430 \u043d\u043e\u0432\u043e\u0439 \u0437\u0430\u0434\u0430\u0447\u0438.</p> required"},{"location":"ru/api/storages/async_redisstorage/#qtasks.storages.async_redis.AsyncRedisStorage.add_process","title":"<code>add_process(task_data, priority)</code>  <code>async</code>","text":"<p>\u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u0437\u0430\u0434\u0430\u0447\u0443 \u0432 \u0441\u043f\u0438\u0441\u043e\u043a \u0437\u0430\u0434\u0430\u0447 \u0432 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0435.</p> <p>Parameters:</p> Name Type Description Default <code>task_data</code> <code>str</code> <p>\u0414\u0430\u043d\u043d\u044b\u0435 \u0437\u0430\u0434\u0430\u0447\u0438 \u0438\u0437 \u0431\u0440\u043e\u043a\u0435\u0440\u0430.</p> required <code>priority</code> <code>int</code> <p>\u041f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442 \u0437\u0430\u0434\u0430\u0447\u0438.</p> required"},{"location":"ru/api/storages/async_redisstorage/#qtasks.storages.async_redis.AsyncRedisStorage.get","title":"<code>get(uuid)</code>  <code>async</code>","text":"<p>\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0437\u0430\u0434\u0430\u0447\u0435.</p> <p>Parameters:</p> Name Type Description Default <code>uuid</code> <code>UUID | str</code> <p>UUID \u0437\u0430\u0434\u0430\u0447\u0438.</p> required <p>Returns:</p> Type Description <code>Task | None</code> <p>Task|None: \u0415\u0441\u043b\u0438 \u0435\u0441\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0437\u0430\u0434\u0430\u0447\u0435, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 <code>schemas.task.Task</code>, \u0438\u043d\u0430\u0447\u0435 <code>None</code>.</p>"},{"location":"ru/api/storages/async_redisstorage/#qtasks.storages.async_redis.AsyncRedisStorage.get_all","title":"<code>get_all()</code>  <code>async</code>","text":"<p>\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0432\u0441\u0435 \u0437\u0430\u0434\u0430\u0447\u0438.</p> <p>Returns:</p> Type Description <code>list[Task]</code> <p>list[Task]: \u041c\u0430\u0441\u0441\u0438\u0432 \u0437\u0430\u0434\u0430\u0447.</p>"},{"location":"ru/api/storages/async_redisstorage/#qtasks.storages.async_redis.AsyncRedisStorage.remove_finished_task","title":"<code>remove_finished_task(task_broker, model)</code>  <code>async</code>","text":"<p>\u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0437\u0430\u0434\u0430\u0447\u0438.</p> <p>Parameters:</p> Name Type Description Default <code>task_broker</code> <code>TaskPrioritySchema</code> <p>\u0421\u0445\u0435\u043c\u0430 \u043f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442\u043d\u043e\u0439 \u0437\u0430\u0434\u0430\u0447\u0438.</p> required <code>model</code> <code>TaskStatusNewSchema | TaskStatusErrorSchema</code> <p>\u041c\u043e\u0434\u0435\u043b\u044c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u0434\u0430\u0447\u0438.</p> required"},{"location":"ru/api/storages/async_redisstorage/#qtasks.storages.async_redis.AsyncRedisStorage.start","title":"<code>start()</code>  <code>async</code>","text":"<p>\u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435.</p>"},{"location":"ru/api/storages/async_redisstorage/#qtasks.storages.async_redis.AsyncRedisStorage.stop","title":"<code>stop()</code>  <code>async</code>","text":"<p>\u041e\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435.</p>"},{"location":"ru/api/storages/async_redisstorage/#qtasks.storages.async_redis.AsyncRedisStorage.update","title":"<code>update(**kwargs)</code>  <code>async</code>","text":"<p>\u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0437\u0430\u0434\u0430\u0447\u0435.</p> <p>Parameters:</p> Name Type Description Default <code>kwargs</code> <code>dict</code> <p>\u0434\u0430\u043d\u043d\u044b\u0435 \u0437\u0430\u0434\u0430\u0447\u0438 \u0442\u0438\u043f\u0430 kwargs.</p> <code>{}</code>"},{"location":"ru/api/storages/basestorage/","title":"BaseStorage - \u041f\u0438\u0448\u0435\u043c \u0441\u0432\u043e\u0451 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435","text":""},{"location":"ru/api/storages/basestorage/#qtasks.storages.base.BaseStorage","title":"<code>BaseStorage</code>","text":"<p>               Bases: <code>ABC</code></p> <p><code>BaseStorage</code> - \u0410\u0431\u0441\u0442\u0440\u0430\u043a\u0442\u043d\u044b\u0439 \u043a\u043b\u0430\u0441\u0441, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u043e\u043c \u0434\u043b\u044f \u0425\u0440\u0430\u043d\u0438\u043b\u0438\u0449.</p>"},{"location":"ru/api/storages/basestorage/#qtasks.storages.base.BaseStorage--example","title":"Example","text":"<pre><code>from qtasks import QueueTasks\nfrom qtasks.storages.base import BaseStorage\n\nclass MyStorage(BaseStorage):\n    def __init__(self, name: str = None):\n        super().__init__(name=name)\n        pass\n</code></pre>"},{"location":"ru/api/storages/basestorage/#qtasks.storages.base.BaseStorage.add","title":"<code>add(uuid, task_status)</code>  <code>abstractmethod</code>","text":"<p>\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438 \u0432 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435.</p> <p>Parameters:</p> Name Type Description Default <code>uuid</code> <code>UUID | str</code> <p>UUID \u0437\u0430\u0434\u0430\u0447\u0438.</p> required <code>task_status</code> <code>TaskStatusNewSchema</code> <p>\u0421\u0445\u0435\u043c\u0430 \u0441\u0442\u0430\u0442\u0443\u0441\u0430 \u043d\u043e\u0432\u043e\u0439 \u0437\u0430\u0434\u0430\u0447\u0438.</p> required"},{"location":"ru/api/storages/basestorage/#qtasks.storages.base.BaseStorage.add_plugin","title":"<code>add_plugin(plugin, name=None)</code>","text":"<p>\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043f\u043b\u0430\u0433\u0438\u043d.</p> <p>Parameters:</p> Name Type Description Default <code>plugin</code> <code>Type[BasePlugin]</code> <p>\u041a\u043b\u0430\u0441\u0441 \u043f\u043b\u0430\u0433\u0438\u043d\u0430.</p> required <code>name</code> <code>str</code> <p>\u0418\u043c\u044f \u043f\u043b\u0430\u0433\u0438\u043d\u0430. \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: <code>None</code>.</p> <code>None</code>"},{"location":"ru/api/storages/basestorage/#qtasks.storages.base.BaseStorage.get","title":"<code>get(uuid)</code>  <code>abstractmethod</code>","text":"<p>\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0437\u0430\u0434\u0430\u0447\u0435.</p> <p>Parameters:</p> Name Type Description Default <code>uuid</code> <code>UUID | str</code> <p>UUID \u0437\u0430\u0434\u0430\u0447\u0438.</p> required <p>Returns:</p> Type Description <code>Task | None</code> <p>Task|None: \u0415\u0441\u043b\u0438 \u0435\u0441\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0437\u0430\u0434\u0430\u0447\u0435, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 <code>schemas.task.Task</code>, \u0438\u043d\u0430\u0447\u0435 <code>None</code>.</p>"},{"location":"ru/api/storages/basestorage/#qtasks.storages.base.BaseStorage.get_all","title":"<code>get_all()</code>  <code>abstractmethod</code>","text":"<p>\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0432\u0441\u0435 \u0437\u0430\u0434\u0430\u0447\u0438.</p> <p>Returns:</p> Type Description <code>list[Task]</code> <p>list[Task]: \u041c\u0430\u0441\u0441\u0438\u0432 \u0437\u0430\u0434\u0430\u0447.</p>"},{"location":"ru/api/storages/basestorage/#qtasks.storages.base.BaseStorage.remove_finished_task","title":"<code>remove_finished_task(task_broker, model)</code>","text":"<p>\u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0430 \u0447\u0435\u0440\u0435\u0437 \u0444\u0443\u043d\u043a\u0446\u0438\u044e <code>self.storage.remove_finished_task</code>.</p> <p>Parameters:</p> Name Type Description Default <code>task_broker</code> <code>TaskPrioritySchema</code> <p>\u0421\u0445\u0435\u043c\u0430 \u043f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442\u043d\u043e\u0439 \u0437\u0430\u0434\u0430\u0447\u0438.</p> required <code>model</code> <code>TaskStatusNewSchema | TaskStatusErrorSchema</code> <p>\u041c\u043e\u0434\u0435\u043b\u044c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u0434\u0430\u0447\u0438.</p> required"},{"location":"ru/api/storages/basestorage/#qtasks.storages.base.BaseStorage.start","title":"<code>start()</code>  <code>abstractmethod</code>","text":"<p>\u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435. \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0437\u0430\u0434\u0435\u0439\u0441\u0442\u0432\u0443\u0435\u0442\u0441\u044f \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u043c \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u043e\u043c <code>QueueTasks</code> \u043f\u043e\u0441\u043b\u0435 \u0437\u0430\u043f\u0443\u0441\u043a\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 <code>run_forever</code>.</p>"},{"location":"ru/api/storages/basestorage/#qtasks.storages.base.BaseStorage.stop","title":"<code>stop()</code>  <code>abstractmethod</code>","text":"<p>\u041e\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435. \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0437\u0430\u0434\u0435\u0439\u0441\u0442\u0432\u0443\u0435\u0442\u0441\u044f \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u043c \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u043e\u043c <code>QueueTasks</code> \u043f\u043e\u0441\u043b\u0435 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u0438 <code>run_forever</code>.</p>"},{"location":"ru/api/storages/basestorage/#qtasks.storages.base.BaseStorage.update","title":"<code>update(**kwargs)</code>  <code>abstractmethod</code>","text":"<p>\u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0437\u0430\u0434\u0430\u0447\u0435.</p> <p>Parameters:</p> Name Type Description Default <code>kwargs</code> <code>dict</code> <p>\u0434\u0430\u043d\u043d\u044b\u0435 \u0437\u0430\u0434\u0430\u0447\u0438 \u0442\u0438\u043f\u0430 kwargs.</p> <code>{}</code>"},{"location":"ru/api/storages/sync_redisstorage/","title":"SyncRedisStorage","text":""},{"location":"ru/api/storages/sync_redisstorage/#qtasks.storages.sync_redis.SyncRedisStorage","title":"<code>SyncRedisStorage</code>","text":"<p>               Bases: <code>BaseStorage</code></p> <p>\u0425\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435, \u0440\u0430\u0431\u043e\u0442\u0430\u044e\u0449\u0438\u0439 \u0441 Redis, \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0437\u0430\u0434\u0430\u0447\u0430\u0445.</p>"},{"location":"ru/api/storages/sync_redisstorage/#qtasks.storages.sync_redis.SyncRedisStorage--example","title":"Example","text":"<pre><code>from qtasks import QueueTasks\nfrom qtasks.brokers import SyncRedisBroker\nfrom qtasks.storages import SyncRedisStorage\n\nstorage = SyncRedisBroker(name=\"QueueTasks\")\nbroker = SyncRedisBroker(name=\"QueueTasks\", storage=storage)\n\napp = QueueTasks(broker=broker)\n</code></pre>"},{"location":"ru/api/storages/sync_redisstorage/#qtasks.storages.sync_redis.SyncRedisStorage.add","title":"<code>add(uuid, task_status)</code>","text":"<p>\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438 \u0432 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435.</p> <p>Parameters:</p> Name Type Description Default <code>uuid</code> <code>UUID | str</code> <p>UUID \u0437\u0430\u0434\u0430\u0447\u0438.</p> required <code>task_status</code> <code>TaskStatusNewSchema</code> <p>\u0421\u0445\u0435\u043c\u0430 \u0441\u0442\u0430\u0442\u0443\u0441\u0430 \u043d\u043e\u0432\u043e\u0439 \u0437\u0430\u0434\u0430\u0447\u0438.</p> required"},{"location":"ru/api/storages/sync_redisstorage/#qtasks.storages.sync_redis.SyncRedisStorage.add_process","title":"<code>add_process(task_data, priority)</code>","text":"<p>\u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u0437\u0430\u0434\u0430\u0447\u0443 \u0432 \u0441\u043f\u0438\u0441\u043e\u043a \u0437\u0430\u0434\u0430\u0447 \u0432 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0435.</p> <p>Parameters:</p> Name Type Description Default <code>task_data</code> <code>str</code> <p>\u0414\u0430\u043d\u043d\u044b\u0435 \u0437\u0430\u0434\u0430\u0447\u0438 \u0438\u0437 \u0431\u0440\u043e\u043a\u0435\u0440\u0430.</p> required <code>priority</code> <code>int</code> <p>\u041f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442 \u0437\u0430\u0434\u0430\u0447\u0438.</p> required"},{"location":"ru/api/storages/sync_redisstorage/#qtasks.storages.sync_redis.SyncRedisStorage.get","title":"<code>get(uuid)</code>","text":"<p>\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0437\u0430\u0434\u0430\u0447\u0435.</p> <p>Parameters:</p> Name Type Description Default <code>uuid</code> <code>UUID | str</code> <p>UUID \u0437\u0430\u0434\u0430\u0447\u0438.</p> required <p>Returns:</p> Type Description <code>Task | None</code> <p>Task|None: \u0415\u0441\u043b\u0438 \u0435\u0441\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0437\u0430\u0434\u0430\u0447\u0435, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 <code>schemas.task.Task</code>, \u0438\u043d\u0430\u0447\u0435 <code>None</code>.</p>"},{"location":"ru/api/storages/sync_redisstorage/#qtasks.storages.sync_redis.SyncRedisStorage.get_all","title":"<code>get_all()</code>","text":"<p>\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0432\u0441\u0435 \u0437\u0430\u0434\u0430\u0447\u0438.</p> <p>Returns:</p> Type Description <code>list[Task]</code> <p>list[Task]: \u041c\u0430\u0441\u0441\u0438\u0432 \u0437\u0430\u0434\u0430\u0447.</p>"},{"location":"ru/api/storages/sync_redisstorage/#qtasks.storages.sync_redis.SyncRedisStorage.remove_finished_task","title":"<code>remove_finished_task(task_broker, model)</code>","text":"<p>\u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0437\u0430\u0434\u0430\u0447\u0438.</p> <p>Parameters:</p> Name Type Description Default <code>task_broker</code> <code>TaskPrioritySchema</code> <p>\u0421\u0445\u0435\u043c\u0430 \u043f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442\u043d\u043e\u0439 \u0437\u0430\u0434\u0430\u0447\u0438.</p> required <code>model</code> <code>TaskStatusNewSchema | TaskStatusErrorSchema</code> <p>\u041c\u043e\u0434\u0435\u043b\u044c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u0434\u0430\u0447\u0438.</p> required"},{"location":"ru/api/storages/sync_redisstorage/#qtasks.storages.sync_redis.SyncRedisStorage.start","title":"<code>start()</code>","text":"<p>\u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435.</p>"},{"location":"ru/api/storages/sync_redisstorage/#qtasks.storages.sync_redis.SyncRedisStorage.stop","title":"<code>stop()</code>","text":"<p>\u041e\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435.</p>"},{"location":"ru/api/storages/sync_redisstorage/#qtasks.storages.sync_redis.SyncRedisStorage.update","title":"<code>update(**kwargs)</code>","text":"<p>\u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0437\u0430\u0434\u0430\u0447\u0435.</p> <p>Parameters:</p> Name Type Description Default <code>kwargs</code> <code>dict</code> <p>\u0434\u0430\u043d\u043d\u044b\u0435 \u0437\u0430\u0434\u0430\u0447\u0438 \u0442\u0438\u043f\u0430 kwargs.</p> <code>{}</code>"},{"location":"ru/api/timers/async_timer/","title":"AsyncTimer","text":""},{"location":"ru/api/timers/async_timer/#qtasks.timers.async_timer.AsyncTimer","title":"<code>AsyncTimer</code>","text":"<p>               Bases: <code>BaseTimer</code></p> <p>\u0422\u0430\u0439\u043c\u0435\u0440, \u0440\u0430\u0431\u043e\u0442\u0430\u044e\u0449\u0438\u0439 \u0447\u0435\u0440\u0435\u0437 apscheduler, \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u044e\u0449\u0438\u0439 \u0437\u0430\u0434\u0430\u0447\u0438.</p>"},{"location":"ru/api/timers/async_timer/#qtasks.timers.async_timer.AsyncTimer--_1","title":"\u041f\u0440\u0438\u043c\u0435\u0440","text":"<pre><code>from qtasks import QueueTasks\nfrom qtasks.timers import AsyncTimer\n\napp = QueueTasks()\ntimer = AsyncTimer(app=app)\n\ntrigger = CronTrigger(second=\"*/10\") # \u0417\u0430\u043f\u0443\u0441\u043a \u043a\u0430\u0436\u0434\u044b\u0435 10 \u0441\u0435\u043a\u0443\u043d\u0434\ntimer.add_task(\"test\", trigger=trigger, args=(2,))\n\ntimer.run_forever()\n</code></pre>"},{"location":"ru/api/timers/async_timer/#qtasks.timers.async_timer.AsyncTimer.add_task","title":"<code>add_task(task_name, trigger, priority=0, args=None, kwargs=None)</code>","text":"<p>\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438.</p> <p>Parameters:</p> Name Type Description Default <code>task_name</code> <code>str</code> <p>\u0418\u043c\u044f \u0437\u0430\u0434\u0430\u0447\u0438.</p> required <code>priority</code> <code>int</code> <p>\u041f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442 \u0437\u0430\u0434\u0430\u0447\u0438. \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e <code>0</code>.</p> <code>0</code> <code>args</code> <code>tuple</code> <p>args \u0437\u0430\u0434\u0430\u0447\u0438. \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e <code>()</code>.</p> <code>None</code> <code>kwargs</code> <code>dict</code> <p>kwags \u0437\u0430\u0434\u0430\u0447\u0438. \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e <code>{}</code>.</p> <code>None</code> <p>Returns:</p> Type Description <code>Job</code> <p>Any|None: \u0417\u0430\u0434\u0430\u0447\u0430.</p>"},{"location":"ru/api/timers/async_timer/#qtasks.timers.async_timer.AsyncTimer.run_forever","title":"<code>run_forever()</code>","text":"<p>\u0417\u0430\u043f\u0443\u0441\u043a \u0422\u0430\u0439\u043c\u0435\u0440\u0430.</p>"},{"location":"ru/api/timers/basetimer/","title":"BaseTimer - \u041f\u0438\u0448\u0435\u043c \u0441\u0432\u043e\u0439 \u0422\u0430\u0439\u043c\u0435\u0440","text":""},{"location":"ru/api/timers/basetimer/#qtasks.timers.base.BaseTimer","title":"<code>BaseTimer</code>","text":"<p>               Bases: <code>ABC</code></p> <p><code>BaseTimer</code> - \u0410\u0431\u0441\u0442\u0440\u0430\u043a\u0442\u043d\u044b\u0439 \u043a\u043b\u0430\u0441\u0441, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u043e\u043c \u0434\u043b\u044f \u0422\u0430\u0439\u043c\u0435\u0440\u043e\u0432.</p>"},{"location":"ru/api/timers/basetimer/#qtasks.timers.base.BaseTimer--_1","title":"\u041f\u0440\u0438\u043c\u0435\u0440","text":"<pre><code>from qtasks import QueueTasks\nfrom qtasks.timers.base import BaseTimer\n\nclass MyTimer(BaseTimer):\n    def __init__(self, app: QueueTasks):\n        super().__init__(app=app)\n        pass\n</code></pre>"},{"location":"ru/api/timers/basetimer/#qtasks.timers.base.BaseTimer.add_task","title":"<code>add_task(task_name, trigger, priority=0, args=None, kwargs=None)</code>  <code>abstractmethod</code>","text":"<p>\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438.</p> <p>Parameters:</p> Name Type Description Default <code>task_name</code> <code>str</code> <p>\u0418\u043c\u044f \u0437\u0430\u0434\u0430\u0447\u0438.</p> required <code>trigger</code> <code>Any</code> <p>\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0442\u0440\u0438\u0433\u0433\u0435\u0440\u0430.</p> required <code>priority</code> <code>int</code> <p>\u041f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442 \u0437\u0430\u0434\u0430\u0447\u0438. \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e <code>0</code>.</p> <code>0</code> <code>args</code> <code>tuple</code> <p>args \u0437\u0430\u0434\u0430\u0447\u0438. \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e <code>()</code>.</p> <code>None</code> <code>kwargs</code> <code>dict</code> <p>kwags \u0437\u0430\u0434\u0430\u0447\u0438. \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e <code>{}</code>.</p> <code>None</code> <p>Returns:</p> Type Description <code>Any | None</code> <p>Any|None: \u0417\u0430\u0434\u0430\u0447\u0430.</p>"},{"location":"ru/api/timers/basetimer/#qtasks.timers.base.BaseTimer.run_forever","title":"<code>run_forever()</code>","text":"<p>\u0417\u0430\u043f\u0443\u0441\u043a \u0422\u0430\u0439\u043c\u0435\u0440\u0430.</p>"},{"location":"ru/api/timers/sync_timer/","title":"SyncTimer","text":""},{"location":"ru/api/timers/sync_timer/#qtasks.timers.sync_timer.SyncTimer","title":"<code>SyncTimer</code>","text":"<p>               Bases: <code>BaseTimer</code></p> <p>\u0422\u0430\u0439\u043c\u0435\u0440, \u0440\u0430\u0431\u043e\u0442\u0430\u044e\u0449\u0438\u0439 \u0447\u0435\u0440\u0435\u0437 apscheduler, \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u044e\u0449\u0438\u0439 \u0437\u0430\u0434\u0430\u0447\u0438.</p>"},{"location":"ru/api/timers/sync_timer/#qtasks.timers.sync_timer.SyncTimer--_1","title":"\u041f\u0440\u0438\u043c\u0435\u0440","text":"<pre><code>from qtasks import QueueTasks\nfrom qtasks.timers import SyncTimer\n\napp = QueueTasks()\ntimer = SyncTimer(app=app)\n\ntrigger = CronTrigger(second=\"*/10\") # \u0417\u0430\u043f\u0443\u0441\u043a \u043a\u0430\u0436\u0434\u044b\u0435 10 \u0441\u0435\u043a\u0443\u043d\u0434\ntimer.add_task(\"test\", trigger=trigger, args=(2,))\n\ntimer.run_forever()\n</code></pre>"},{"location":"ru/api/timers/sync_timer/#qtasks.timers.sync_timer.SyncTimer.add_task","title":"<code>add_task(task_name, trigger, priority=0, args=None, kwargs=None)</code>","text":"<p>\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438.</p> <p>Parameters:</p> Name Type Description Default <code>task_name</code> <code>str</code> <p>\u0418\u043c\u044f \u0437\u0430\u0434\u0430\u0447\u0438.</p> required <code>priority</code> <code>int</code> <p>\u041f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442 \u0437\u0430\u0434\u0430\u0447\u0438. \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e <code>0</code>.</p> <code>0</code> <code>args</code> <code>tuple</code> <p>args \u0437\u0430\u0434\u0430\u0447\u0438. \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e <code>()</code>.</p> <code>None</code> <code>kwargs</code> <code>dict</code> <p>kwags \u0437\u0430\u0434\u0430\u0447\u0438. \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e <code>{}</code>.</p> <code>None</code> <p>Returns:</p> Type Description <code>Job</code> <p>Any|None: \u0417\u0430\u0434\u0430\u0447\u0430.</p>"},{"location":"ru/api/timers/sync_timer/#qtasks.timers.sync_timer.SyncTimer.run_forever","title":"<code>run_forever()</code>","text":"<p>\u0417\u0430\u043f\u0443\u0441\u043a \u0422\u0430\u0439\u043c\u0435\u0440\u0430.</p>"},{"location":"ru/api/workers/async_worker/","title":"AsyncWorker","text":""},{"location":"ru/api/workers/async_worker/#qtasks.workers.async_worker.AsyncWorker","title":"<code>AsyncWorker</code>","text":"<p>               Bases: <code>BaseWorker</code></p> <p>\u0412\u043e\u0440\u043a\u0435\u0440, \u041f\u043e\u043b\u0443\u0447\u0430\u044e\u0449\u0438\u0439 \u0438\u0437 \u0411\u0440\u043e\u043a\u0435\u0440\u0430 \u0437\u0430\u0434\u0430\u0447\u0438 \u0438 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u044e\u0449\u0438\u0439 \u0438\u0445.</p>"},{"location":"ru/api/workers/async_worker/#qtasks.workers.async_worker.AsyncWorker--_1","title":"\u041f\u0440\u0438\u043c\u0435\u0440","text":"<pre><code>from qtasks import QueueTasks\nfrom qtasks.workers import AsyncWorker\n\nworker = AsyncWorker()\napp = QueueTasks(worker=worker)\n</code></pre>"},{"location":"ru/api/workers/async_worker/#qtasks.workers.async_worker.AsyncWorker.add","title":"<code>add(name, uuid, priority, created_at, args, kwargs)</code>  <code>async</code>","text":"<p>\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438 \u0432 \u043e\u0447\u0435\u0440\u0435\u0434\u044c.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>\u0418\u043c\u044f \u0437\u0430\u0434\u0430\u0447\u0438.</p> required <code>uuid</code> <code>UUID</code> <p>UUID \u0437\u0430\u0434\u0430\u0447\u0438.</p> required <code>priority</code> <code>int</code> <p>\u041f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442 \u0437\u0430\u0434\u0430\u0447\u0438.</p> required <code>created_at</code> <code>float</code> <p>\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 timestamp.</p> required <code>args</code> <code>tuple</code> <p>\u0410\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b \u0437\u0430\u0434\u0430\u0447\u0438 \u0442\u0438\u043f\u0430 args.</p> required <code>kwargs</code> <code>dict</code> <p>\u0410\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b \u0437\u0430\u0434\u0430\u0447\u0438 \u0442\u0438\u043f\u0430 kwargs.</p> required"},{"location":"ru/api/workers/async_worker/#qtasks.workers.async_worker.AsyncWorker.start","title":"<code>start(num_workers=4)</code>  <code>async</code>","text":"<p>\u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u043e\u0432 \u0437\u0430\u0434\u0430\u0447.</p> <p>Parameters:</p> Name Type Description Default <code>num_workers</code> <code>int</code> <p>\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432\u043e\u0440\u043a\u0435\u0440\u043e\u0432. \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: 4.</p> <code>4</code>"},{"location":"ru/api/workers/async_worker/#qtasks.workers.async_worker.AsyncWorker.stop","title":"<code>stop()</code>  <code>async</code>","text":"<p>\u041e\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0432\u043e\u0440\u043a\u0435\u0440\u044b.</p>"},{"location":"ru/api/workers/async_worker/#qtasks.workers.async_worker.AsyncWorker.update_config","title":"<code>update_config(config)</code>","text":"<p>\u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u0442 \u043a\u043e\u043d\u0444\u0438\u0433 \u0431\u0440\u043e\u043a\u0435\u0440\u0430 \u0438 \u0441\u0435\u043c\u0430\u0444\u043e\u0440\u0443.</p> <p>Parameters:</p> Name Type Description Default <code>config</code> <code>QueueConfig</code> <p>\u041a\u043e\u043d\u0444\u0438\u0433.</p> required"},{"location":"ru/api/workers/async_worker/#qtasks.workers.async_worker.AsyncWorker.worker","title":"<code>worker(number)</code>  <code>async</code>","text":"<p>\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0437\u0430\u0434\u0430\u0447.</p> <p>Parameters:</p> Name Type Description Default <code>number</code> <code>int</code> <p>\u041d\u043e\u043c\u0435\u0440 \u0412\u043e\u0440\u043a\u0435\u0440\u0430.</p> required"},{"location":"ru/api/workers/baseworker/","title":"BaseWorker - \u041f\u0438\u0448\u0435\u043c \u0441\u0432\u043e\u0439 \u0432\u043e\u0440\u043a\u0435\u0440","text":""},{"location":"ru/api/workers/baseworker/#qtasks.workers.base.BaseWorker","title":"<code>BaseWorker</code>","text":"<p>               Bases: <code>ABC</code></p> <p><code>BaseWorker</code> - \u0410\u0431\u0441\u0442\u0440\u0430\u043a\u0442\u043d\u044b\u0439 \u043a\u043b\u0430\u0441\u0441, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u043e\u043c \u0434\u043b\u044f \u0412\u043e\u0440\u043a\u0435\u0440\u043e\u0432.</p>"},{"location":"ru/api/workers/baseworker/#qtasks.workers.base.BaseWorker--example","title":"Example","text":"<pre><code>from qtasks import QueueTasks\nfrom qtasks.workers.base import BaseWorker\n\nclass MyWorker(BaseWorker):\n    def __init__(self, name: str = None, broker: BaseBroker = None):\n        super().__init__(name=name, broker=broker)\n        pass\n</code></pre>"},{"location":"ru/api/workers/baseworker/#qtasks.workers.base.BaseWorker.add","title":"<code>add(name, uuid, priority, created_at, args, kwargs)</code>  <code>abstractmethod</code>","text":"<p>\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438 \u0432 \u043e\u0447\u0435\u0440\u0435\u0434\u044c.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>\u0418\u043c\u044f \u0437\u0430\u0434\u0430\u0447\u0438.</p> required <code>uuid</code> <code>UUID</code> <p>UUID \u0437\u0430\u0434\u0430\u0447\u0438.</p> required <code>priority</code> <code>int</code> <p>\u041f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442 \u0437\u0430\u0434\u0430\u0447\u0438.</p> required <code>created_at</code> <code>float</code> <p>\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 timestamp.</p> required <code>args</code> <code>tuple</code> <p>\u0410\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b \u0437\u0430\u0434\u0430\u0447\u0438 \u0442\u0438\u043f\u0430 args.</p> required <code>kwargs</code> <code>dict</code> <p>\u0410\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b \u0437\u0430\u0434\u0430\u0447\u0438 \u0442\u0438\u043f\u0430 kwargs.</p> required"},{"location":"ru/api/workers/baseworker/#qtasks.workers.base.BaseWorker.add_plugin","title":"<code>add_plugin(plugin, name=None)</code>","text":"<p>\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043f\u043b\u0430\u0433\u0438\u043d.</p> <p>Parameters:</p> Name Type Description Default <code>plugin</code> <code>Type[BasePlugin]</code> <p>\u041a\u043b\u0430\u0441\u0441 \u043f\u043b\u0430\u0433\u0438\u043d\u0430.</p> required <code>name</code> <code>str</code> <p>\u0418\u043c\u044f \u043f\u043b\u0430\u0433\u0438\u043d\u0430. \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: <code>None</code>.</p> <code>None</code>"},{"location":"ru/api/workers/baseworker/#qtasks.workers.base.BaseWorker.start","title":"<code>start(num_workers=None)</code>  <code>abstractmethod</code>","text":"<p>\u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u043e\u0432 \u0437\u0430\u0434\u0430\u0447. \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0437\u0430\u0434\u0435\u0439\u0441\u0442\u0432\u0443\u0435\u0442\u0441\u044f \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u043c \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u043e\u043c <code>QueueTasks</code> \u0447\u0435\u0440\u0435\u0437 <code>run_forever</code>.</p> <p>Parameters:</p> Name Type Description Default <code>num_workers</code> <code>int</code> <p>\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432\u043e\u0440\u043a\u0435\u0440\u043e\u0432. \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: 4.</p> <code>None</code>"},{"location":"ru/api/workers/baseworker/#qtasks.workers.base.BaseWorker.stop","title":"<code>stop()</code>  <code>abstractmethod</code>","text":"<p>\u041e\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0432\u043e\u0440\u043a\u0435\u0440\u044b. \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0437\u0430\u0434\u0435\u0439\u0441\u0442\u0432\u0443\u0435\u0442\u0441\u044f \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u043c \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u043e\u043c <code>QueueTasks</code> \u043f\u043e\u0441\u043b\u0435 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u0438 <code>run_forever</code>.</p>"},{"location":"ru/api/workers/baseworker/#qtasks.workers.base.BaseWorker.update_config","title":"<code>update_config(config)</code>  <code>abstractmethod</code>","text":"<p>\u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u0442 \u043a\u043e\u043d\u0444\u0438\u0433 \u0431\u0440\u043e\u043a\u0435\u0440\u0430.</p> <p>Parameters:</p> Name Type Description Default <code>config</code> <code>QueueConfig</code> <p>\u041a\u043e\u043d\u0444\u0438\u0433.</p> required"},{"location":"ru/api/workers/baseworker/#qtasks.workers.base.BaseWorker.worker","title":"<code>worker()</code>  <code>abstractmethod</code>","text":"<p>\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0437\u0430\u0434\u0430\u0447. \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0437\u0430\u0434\u0435\u0439\u0441\u0442\u0432\u0443\u0435\u0442\u0441\u044f \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0435\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439 start.</p>"},{"location":"ru/api/workers/sync_threadworker/","title":"SyncThreadWorker","text":""},{"location":"ru/api/workers/sync_threadworker/#qtasks.workers.sync_worker.SyncThreadWorker","title":"<code>SyncThreadWorker</code>","text":"<p>               Bases: <code>BaseWorker</code></p> <p>\u0412\u043e\u0440\u043a\u0435\u0440, \u041f\u043e\u043b\u0443\u0447\u0430\u044e\u0449\u0438\u0439 \u0438\u0437 \u0411\u0440\u043e\u043a\u0435\u0440\u0430 \u0437\u0430\u0434\u0430\u0447\u0438 \u0438 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u044e\u0449\u0438\u0439 \u0438\u0445.</p>"},{"location":"ru/api/workers/sync_threadworker/#qtasks.workers.sync_worker.SyncThreadWorker--_1","title":"\u041f\u0440\u0438\u043c\u0435\u0440","text":"<pre><code>from qtasks import QueueTasks\nfrom qtasks.workers import SyncThreadWorker\n\nworker = SyncThreadWorker()\napp = QueueTasks(worker=worker)\n</code></pre>"},{"location":"ru/api/workers/sync_threadworker/#qtasks.workers.sync_worker.SyncThreadWorker.add","title":"<code>add(name, uuid, priority, created_at, args, kwargs)</code>","text":"<p>\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438 \u0432 \u043e\u0447\u0435\u0440\u0435\u0434\u044c.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>\u0418\u043c\u044f \u0437\u0430\u0434\u0430\u0447\u0438.</p> required <code>uuid</code> <code>UUID</code> <p>UUID \u0437\u0430\u0434\u0430\u0447\u0438.</p> required <code>priority</code> <code>int</code> <p>\u041f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442 \u0437\u0430\u0434\u0430\u0447\u0438.</p> required <code>created_at</code> <code>float</code> <p>\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 timestamp.</p> required <code>args</code> <code>tuple</code> <p>\u0410\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b \u0437\u0430\u0434\u0430\u0447\u0438 \u0442\u0438\u043f\u0430 args.</p> required <code>kwargs</code> <code>dict</code> <p>\u0410\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b \u0437\u0430\u0434\u0430\u0447\u0438 \u0442\u0438\u043f\u0430 kwargs.</p> required"},{"location":"ru/api/workers/sync_threadworker/#qtasks.workers.sync_worker.SyncThreadWorker.start","title":"<code>start(num_workers=4)</code>","text":"<p>\u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u043e\u0432 \u0437\u0430\u0434\u0430\u0447.</p> <p>Parameters:</p> Name Type Description Default <code>num_workers</code> <code>int</code> <p>\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432\u043e\u0440\u043a\u0435\u0440\u043e\u0432. \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: 4.</p> <code>4</code>"},{"location":"ru/api/workers/sync_threadworker/#qtasks.workers.sync_worker.SyncThreadWorker.stop","title":"<code>stop()</code>","text":"<p>\u041e\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0432\u043e\u0440\u043a\u0435\u0440\u044b.</p>"},{"location":"ru/api/workers/sync_threadworker/#qtasks.workers.sync_worker.SyncThreadWorker.update_config","title":"<code>update_config(config)</code>","text":"<p>\u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u0442 \u043a\u043e\u043d\u0444\u0438\u0433.</p>"},{"location":"ru/api/workers/sync_threadworker/#qtasks.workers.sync_worker.SyncThreadWorker.worker","title":"<code>worker(number)</code>","text":"<p>\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0437\u0430\u0434\u0430\u0447.</p> <p>Parameters:</p> Name Type Description Default <code>number</code> <code>int</code> <p>\u041d\u043e\u043c\u0435\u0440 \u0412\u043e\u0440\u043a\u0435\u0440\u0430.</p> required"}]}